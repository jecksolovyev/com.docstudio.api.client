/*
 * Docstudio Api Documentation
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: R74.21
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * Integration default rules
 */
@Schema(description = "Integration default rules")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-02-22T14:56:46.674358341Z[GMT]")
public class IntegrationDefaultRuleDTO {
  /**
   * Default rule
   */
  @JsonAdapter(RuleEnum.Adapter.class)
  public enum RuleEnum {
    INBOX("inbox"),
    INBOX_NOTIFY_EMAIL("inbox-notify-email"),
    AUTOREJECT("autoreject");

    private String value;

    RuleEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static RuleEnum fromValue(String input) {
      for (RuleEnum b : RuleEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<RuleEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final RuleEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public RuleEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return RuleEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("rule")
  private RuleEnum rule = null;

  @SerializedName("parameter")
  private String parameter = null;

  public IntegrationDefaultRuleDTO rule(RuleEnum rule) {
    this.rule = rule;
    return this;
  }

   /**
   * Default rule
   * @return rule
  **/
  @Schema(required = true, description = "Default rule")
  public RuleEnum getRule() {
    return rule;
  }

  public void setRule(RuleEnum rule) {
    this.rule = rule;
  }

  public IntegrationDefaultRuleDTO parameter(String parameter) {
    this.parameter = parameter;
    return this;
  }

   /**
   * Default rule parameter
   * @return parameter
  **/
  @Schema(required = true, description = "Default rule parameter")
  public String getParameter() {
    return parameter;
  }

  public void setParameter(String parameter) {
    this.parameter = parameter;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IntegrationDefaultRuleDTO integrationDefaultRuleDTO = (IntegrationDefaultRuleDTO) o;
    return Objects.equals(this.rule, integrationDefaultRuleDTO.rule) &&
        Objects.equals(this.parameter, integrationDefaultRuleDTO.parameter);
  }

  @Override
  public int hashCode() {
    return Objects.hash(rule, parameter);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IntegrationDefaultRuleDTO {\n");
    
    sb.append("    rule: ").append(toIndentedString(rule)).append("\n");
    sb.append("    parameter: ").append(toIndentedString(parameter)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
