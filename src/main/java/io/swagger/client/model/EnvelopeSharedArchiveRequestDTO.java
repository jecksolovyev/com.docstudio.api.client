/*
 * Docstudio Api Documentation
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: R74.21
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;
/**
 * EnvelopeSharedArchiveRequestDTO
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-02-22T14:56:46.674358341Z[GMT]")
public class EnvelopeSharedArchiveRequestDTO {
  @SerializedName("emails")
  private List<String> emails = new ArrayList<String>();

  @SerializedName("envelopeUuids")
  private List<UUID> envelopeUuids = new ArrayList<UUID>();

  @SerializedName("excludeFiles")
  private String excludeFiles = null;

  public EnvelopeSharedArchiveRequestDTO emails(List<String> emails) {
    this.emails = emails;
    return this;
  }

  public EnvelopeSharedArchiveRequestDTO addEmailsItem(String emailsItem) {
    this.emails.add(emailsItem);
    return this;
  }

   /**
   * Get emails
   * @return emails
  **/
  @Schema(required = true, description = "")
  public List<String> getEmails() {
    return emails;
  }

  public void setEmails(List<String> emails) {
    this.emails = emails;
  }

  public EnvelopeSharedArchiveRequestDTO envelopeUuids(List<UUID> envelopeUuids) {
    this.envelopeUuids = envelopeUuids;
    return this;
  }

  public EnvelopeSharedArchiveRequestDTO addEnvelopeUuidsItem(UUID envelopeUuidsItem) {
    this.envelopeUuids.add(envelopeUuidsItem);
    return this;
  }

   /**
   * Get envelopeUuids
   * @return envelopeUuids
  **/
  @Schema(required = true, description = "")
  public List<UUID> getEnvelopeUuids() {
    return envelopeUuids;
  }

  public void setEnvelopeUuids(List<UUID> envelopeUuids) {
    this.envelopeUuids = envelopeUuids;
  }

  public EnvelopeSharedArchiveRequestDTO excludeFiles(String excludeFiles) {
    this.excludeFiles = excludeFiles;
    return this;
  }

   /**
   * Mask to exclude some files. с - for signature/processing Certificate, p - for Printable version, a - for Audit trail
   * @return excludeFiles
  **/
  @Schema(description = "Mask to exclude some files. с - for signature/processing Certificate, p - for Printable version, a - for Audit trail")
  public String getExcludeFiles() {
    return excludeFiles;
  }

  public void setExcludeFiles(String excludeFiles) {
    this.excludeFiles = excludeFiles;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EnvelopeSharedArchiveRequestDTO envelopeSharedArchiveRequestDTO = (EnvelopeSharedArchiveRequestDTO) o;
    return Objects.equals(this.emails, envelopeSharedArchiveRequestDTO.emails) &&
        Objects.equals(this.envelopeUuids, envelopeSharedArchiveRequestDTO.envelopeUuids) &&
        Objects.equals(this.excludeFiles, envelopeSharedArchiveRequestDTO.excludeFiles);
  }

  @Override
  public int hashCode() {
    return Objects.hash(emails, envelopeUuids, excludeFiles);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EnvelopeSharedArchiveRequestDTO {\n");
    
    sb.append("    emails: ").append(toIndentedString(emails)).append("\n");
    sb.append("    envelopeUuids: ").append(toIndentedString(envelopeUuids)).append("\n");
    sb.append("    excludeFiles: ").append(toIndentedString(excludeFiles)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
