/*
 * Docstudio Api Documentation
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: R74.21
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.UserAuthorizationDTO;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.UUID;
import org.threeten.bp.OffsetDateTime;
/**
 * UserPermissionDTO
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-02-22T14:56:46.674358341Z[GMT]")
public class UserPermissionDTO {
  @SerializedName("uuid")
  private UUID uuid = null;

  @SerializedName("firstName")
  private String firstName = null;

  @SerializedName("lastName")
  private String lastName = null;

  @SerializedName("email")
  private String email = null;

  @SerializedName("createdAt")
  private OffsetDateTime createdAt = null;

  /**
   * Current status of user
   */
  @JsonAdapter(StatusEnum.Adapter.class)
  public enum StatusEnum {
    PENDING_INVITE("PENDING_INVITE"),
    ACTIVE("ACTIVE"),
    BLOCKED("BLOCKED"),
    PENDING_PASSWORD("PENDING_PASSWORD"),
    DELETED("DELETED");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static StatusEnum fromValue(String input) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return StatusEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("status")
  private StatusEnum status = null;

  @SerializedName("corporateUser")
  private Boolean corporateUser = null;

  @SerializedName("authorizations")
  private UserAuthorizationDTO authorizations = null;

  public UserPermissionDTO uuid(UUID uuid) {
    this.uuid = uuid;
    return this;
  }

   /**
   * Unique identifier of user
   * @return uuid
  **/
  @Schema(description = "Unique identifier of user")
  public UUID getUuid() {
    return uuid;
  }

  public void setUuid(UUID uuid) {
    this.uuid = uuid;
  }

  public UserPermissionDTO firstName(String firstName) {
    this.firstName = firstName;
    return this;
  }

   /**
   * First name of user
   * @return firstName
  **/
  @Schema(description = "First name of user")
  public String getFirstName() {
    return firstName;
  }

  public void setFirstName(String firstName) {
    this.firstName = firstName;
  }

  public UserPermissionDTO lastName(String lastName) {
    this.lastName = lastName;
    return this;
  }

   /**
   * Last name of user
   * @return lastName
  **/
  @Schema(description = "Last name of user")
  public String getLastName() {
    return lastName;
  }

  public void setLastName(String lastName) {
    this.lastName = lastName;
  }

  public UserPermissionDTO email(String email) {
    this.email = email;
    return this;
  }

   /**
   * User e-mail
   * @return email
  **/
  @Schema(description = "User e-mail")
  public String getEmail() {
    return email;
  }

  public void setEmail(String email) {
    this.email = email;
  }

  public UserPermissionDTO createdAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

   /**
   * User creation date
   * @return createdAt
  **/
  @Schema(description = "User creation date")
  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }

  public UserPermissionDTO status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * Current status of user
   * @return status
  **/
  @Schema(description = "Current status of user")
  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(StatusEnum status) {
    this.status = status;
  }

  public UserPermissionDTO corporateUser(Boolean corporateUser) {
    this.corporateUser = corporateUser;
    return this;
  }

   /**
   * Is user corporate
   * @return corporateUser
  **/
  @Schema(description = "Is user corporate")
  public Boolean isCorporateUser() {
    return corporateUser;
  }

  public void setCorporateUser(Boolean corporateUser) {
    this.corporateUser = corporateUser;
  }

  public UserPermissionDTO authorizations(UserAuthorizationDTO authorizations) {
    this.authorizations = authorizations;
    return this;
  }

   /**
   * Get authorizations
   * @return authorizations
  **/
  @Schema(description = "")
  public UserAuthorizationDTO getAuthorizations() {
    return authorizations;
  }

  public void setAuthorizations(UserAuthorizationDTO authorizations) {
    this.authorizations = authorizations;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UserPermissionDTO userPermissionDTO = (UserPermissionDTO) o;
    return Objects.equals(this.uuid, userPermissionDTO.uuid) &&
        Objects.equals(this.firstName, userPermissionDTO.firstName) &&
        Objects.equals(this.lastName, userPermissionDTO.lastName) &&
        Objects.equals(this.email, userPermissionDTO.email) &&
        Objects.equals(this.createdAt, userPermissionDTO.createdAt) &&
        Objects.equals(this.status, userPermissionDTO.status) &&
        Objects.equals(this.corporateUser, userPermissionDTO.corporateUser) &&
        Objects.equals(this.authorizations, userPermissionDTO.authorizations);
  }

  @Override
  public int hashCode() {
    return Objects.hash(uuid, firstName, lastName, email, createdAt, status, corporateUser, authorizations);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UserPermissionDTO {\n");
    
    sb.append("    uuid: ").append(toIndentedString(uuid)).append("\n");
    sb.append("    firstName: ").append(toIndentedString(firstName)).append("\n");
    sb.append("    lastName: ").append(toIndentedString(lastName)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    corporateUser: ").append(toIndentedString(corporateUser)).append("\n");
    sb.append("    authorizations: ").append(toIndentedString(authorizations)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
