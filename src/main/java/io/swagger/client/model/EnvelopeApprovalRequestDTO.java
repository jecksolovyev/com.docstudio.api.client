/*
 * Docstudio Api Documentation
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: R74.21
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.EnvelopeApproverDTO;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;
/**
 * Fill only flow UUID or list of approvers
 */
@Schema(description = "Fill only flow UUID or list of approvers")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-02-22T14:56:46.674358341Z[GMT]")
public class EnvelopeApprovalRequestDTO {
  @SerializedName("uuids")
  private List<UUID> uuids = new ArrayList<UUID>();

  @SerializedName("urgent")
  private Boolean urgent = null;

  @SerializedName("flowUuid")
  private UUID flowUuid = null;

  @SerializedName("approvers")
  private List<EnvelopeApproverDTO> approvers = null;

  public EnvelopeApprovalRequestDTO uuids(List<UUID> uuids) {
    this.uuids = uuids;
    return this;
  }

  public EnvelopeApprovalRequestDTO addUuidsItem(UUID uuidsItem) {
    this.uuids.add(uuidsItem);
    return this;
  }

   /**
   * Get uuids
   * @return uuids
  **/
  @Schema(required = true, description = "")
  public List<UUID> getUuids() {
    return uuids;
  }

  public void setUuids(List<UUID> uuids) {
    this.uuids = uuids;
  }

  public EnvelopeApprovalRequestDTO urgent(Boolean urgent) {
    this.urgent = urgent;
    return this;
  }

   /**
   * Is approval urgent?
   * @return urgent
  **/
  @Schema(description = "Is approval urgent?")
  public Boolean isUrgent() {
    return urgent;
  }

  public void setUrgent(Boolean urgent) {
    this.urgent = urgent;
  }

  public EnvelopeApprovalRequestDTO flowUuid(UUID flowUuid) {
    this.flowUuid = flowUuid;
    return this;
  }

   /**
   * UUID of saved approval flow (Approvers must not be set)
   * @return flowUuid
  **/
  @Schema(description = "UUID of saved approval flow (Approvers must not be set)")
  public UUID getFlowUuid() {
    return flowUuid;
  }

  public void setFlowUuid(UUID flowUuid) {
    this.flowUuid = flowUuid;
  }

  public EnvelopeApprovalRequestDTO approvers(List<EnvelopeApproverDTO> approvers) {
    this.approvers = approvers;
    return this;
  }

  public EnvelopeApprovalRequestDTO addApproversItem(EnvelopeApproverDTO approversItem) {
    if (this.approvers == null) {
      this.approvers = new ArrayList<EnvelopeApproverDTO>();
    }
    this.approvers.add(approversItem);
    return this;
  }

   /**
   * Set of approvers (Flow UUID must not be set)
   * @return approvers
  **/
  @Schema(description = "Set of approvers (Flow UUID must not be set)")
  public List<EnvelopeApproverDTO> getApprovers() {
    return approvers;
  }

  public void setApprovers(List<EnvelopeApproverDTO> approvers) {
    this.approvers = approvers;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EnvelopeApprovalRequestDTO envelopeApprovalRequestDTO = (EnvelopeApprovalRequestDTO) o;
    return Objects.equals(this.uuids, envelopeApprovalRequestDTO.uuids) &&
        Objects.equals(this.urgent, envelopeApprovalRequestDTO.urgent) &&
        Objects.equals(this.flowUuid, envelopeApprovalRequestDTO.flowUuid) &&
        Objects.equals(this.approvers, envelopeApprovalRequestDTO.approvers);
  }

  @Override
  public int hashCode() {
    return Objects.hash(uuids, urgent, flowUuid, approvers);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EnvelopeApprovalRequestDTO {\n");
    
    sb.append("    uuids: ").append(toIndentedString(uuids)).append("\n");
    sb.append("    urgent: ").append(toIndentedString(urgent)).append("\n");
    sb.append("    flowUuid: ").append(toIndentedString(flowUuid)).append("\n");
    sb.append("    approvers: ").append(toIndentedString(approvers)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
