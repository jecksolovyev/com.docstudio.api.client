/*
 * Centredo Api Documentation
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: R74.21
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.UUID;
/**
 * GetEnvelopeInviteInfoDTO
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-02-22T14:56:46.674358341Z[GMT]")
public class GetEnvelopeInviteInfoDTO {
  @SerializedName("email")
  private String email = null;

  @SerializedName("envelopeUuid")
  private UUID envelopeUuid = null;

  @SerializedName("status")
  private String status = null;

  @SerializedName("ssoEnabled")
  private Boolean ssoEnabled = null;

  public GetEnvelopeInviteInfoDTO email(String email) {
    this.email = email;
    return this;
  }

   /**
   * Email for which invitation was created
   * @return email
  **/
  @Schema(description = "Email for which invitation was created")
  public String getEmail() {
    return email;
  }

  public void setEmail(String email) {
    this.email = email;
  }

  public GetEnvelopeInviteInfoDTO envelopeUuid(UUID envelopeUuid) {
    this.envelopeUuid = envelopeUuid;
    return this;
  }

   /**
   * UUID of envelope
   * @return envelopeUuid
  **/
  @Schema(description = "UUID of envelope")
  public UUID getEnvelopeUuid() {
    return envelopeUuid;
  }

  public void setEnvelopeUuid(UUID envelopeUuid) {
    this.envelopeUuid = envelopeUuid;
  }

  public GetEnvelopeInviteInfoDTO status(String status) {
    this.status = status;
    return this;
  }

   /**
   * User status
   * @return status
  **/
  @Schema(description = "User status")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }

  public GetEnvelopeInviteInfoDTO ssoEnabled(Boolean ssoEnabled) {
    this.ssoEnabled = ssoEnabled;
    return this;
  }

   /**
   * Is SSO enabled for user
   * @return ssoEnabled
  **/
  @Schema(description = "Is SSO enabled for user")
  public Boolean isSsoEnabled() {
    return ssoEnabled;
  }

  public void setSsoEnabled(Boolean ssoEnabled) {
    this.ssoEnabled = ssoEnabled;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetEnvelopeInviteInfoDTO getEnvelopeInviteInfoDTO = (GetEnvelopeInviteInfoDTO) o;
    return Objects.equals(this.email, getEnvelopeInviteInfoDTO.email) &&
        Objects.equals(this.envelopeUuid, getEnvelopeInviteInfoDTO.envelopeUuid) &&
        Objects.equals(this.status, getEnvelopeInviteInfoDTO.status) &&
        Objects.equals(this.ssoEnabled, getEnvelopeInviteInfoDTO.ssoEnabled);
  }

  @Override
  public int hashCode() {
    return Objects.hash(email, envelopeUuid, status, ssoEnabled);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetEnvelopeInviteInfoDTO {\n");
    
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    envelopeUuid: ").append(toIndentedString(envelopeUuid)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    ssoEnabled: ").append(toIndentedString(ssoEnabled)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
