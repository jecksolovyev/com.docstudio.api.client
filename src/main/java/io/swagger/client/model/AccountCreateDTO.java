/*
 * Centredo Api Documentation
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: R74.21
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * AccountCreateDTO
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-02-22T14:56:46.674358341Z[GMT]")
public class AccountCreateDTO {
  @SerializedName("name")
  private String name = null;

  @SerializedName("inn")
  private String inn = null;

  @SerializedName("mailboxes")
  private List<String> mailboxes = new ArrayList<String>();

  @SerializedName("agreed")
  private Boolean agreed = null;

  public AccountCreateDTO name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Account name
   * @return name
  **/
  @Schema(required = true, description = "Account name")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public AccountCreateDTO inn(String inn) {
    this.inn = inn;
    return this;
  }

   /**
   * Account ITN
   * @return inn
  **/
  @Schema(required = true, description = "Account ITN")
  public String getInn() {
    return inn;
  }

  public void setInn(String inn) {
    this.inn = inn;
  }

  public AccountCreateDTO mailboxes(List<String> mailboxes) {
    this.mailboxes = mailboxes;
    return this;
  }

  public AccountCreateDTO addMailboxesItem(String mailboxesItem) {
    this.mailboxes.add(mailboxesItem);
    return this;
  }

   /**
   * Mailboxes names. At least one mailbox name must be set.
   * @return mailboxes
  **/
  @Schema(required = true, description = "Mailboxes names. At least one mailbox name must be set.")
  public List<String> getMailboxes() {
    return mailboxes;
  }

  public void setMailboxes(List<String> mailboxes) {
    this.mailboxes = mailboxes;
  }

  public AccountCreateDTO agreed(Boolean agreed) {
    this.agreed = agreed;
    return this;
  }

   /**
   * Terms and Conditions agreed
   * @return agreed
  **/
  @Schema(required = true, description = "Terms and Conditions agreed")
  public Boolean isAgreed() {
    return agreed;
  }

  public void setAgreed(Boolean agreed) {
    this.agreed = agreed;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AccountCreateDTO accountCreateDTO = (AccountCreateDTO) o;
    return Objects.equals(this.name, accountCreateDTO.name) &&
        Objects.equals(this.inn, accountCreateDTO.inn) &&
        Objects.equals(this.mailboxes, accountCreateDTO.mailboxes) &&
        Objects.equals(this.agreed, accountCreateDTO.agreed);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, inn, mailboxes, agreed);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AccountCreateDTO {\n");
    
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    inn: ").append(toIndentedString(inn)).append("\n");
    sb.append("    mailboxes: ").append(toIndentedString(mailboxes)).append("\n");
    sb.append("    agreed: ").append(toIndentedString(agreed)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
