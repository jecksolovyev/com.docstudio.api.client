/*
 * Docstudio Api Documentation
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: R74.21
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * Logos properties
 */
@Schema(description = "Logos properties")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-02-22T14:56:46.674358341Z[GMT]")
public class LogosProperties {
  @SerializedName("logoCircleSvg")
  private String logoCircleSvg = null;

  @SerializedName("mimeTypes")
  private List<String> mimeTypes = null;

  @SerializedName("logoMaxPx")
  private Integer logoMaxPx = null;

  @SerializedName("logoMinPx")
  private Integer logoMinPx = null;

  @SerializedName("logoMaxBytes")
  private Integer logoMaxBytes = null;

  @SerializedName("logoCacheHours")
  private Integer logoCacheHours = null;

  @SerializedName("defaultBrandSvg")
  private String defaultBrandSvg = null;

  @SerializedName("logoWithNameSvg")
  private String logoWithNameSvg = null;

  public LogosProperties logoCircleSvg(String logoCircleSvg) {
    this.logoCircleSvg = logoCircleSvg;
    return this;
  }

   /**
   * Get logoCircleSvg
   * @return logoCircleSvg
  **/
  @Schema(description = "")
  public String getLogoCircleSvg() {
    return logoCircleSvg;
  }

  public void setLogoCircleSvg(String logoCircleSvg) {
    this.logoCircleSvg = logoCircleSvg;
  }

  public LogosProperties mimeTypes(List<String> mimeTypes) {
    this.mimeTypes = mimeTypes;
    return this;
  }

  public LogosProperties addMimeTypesItem(String mimeTypesItem) {
    if (this.mimeTypes == null) {
      this.mimeTypes = new ArrayList<String>();
    }
    this.mimeTypes.add(mimeTypesItem);
    return this;
  }

   /**
   * Get mimeTypes
   * @return mimeTypes
  **/
  @Schema(description = "")
  public List<String> getMimeTypes() {
    return mimeTypes;
  }

  public void setMimeTypes(List<String> mimeTypes) {
    this.mimeTypes = mimeTypes;
  }

  public LogosProperties logoMaxPx(Integer logoMaxPx) {
    this.logoMaxPx = logoMaxPx;
    return this;
  }

   /**
   * Get logoMaxPx
   * @return logoMaxPx
  **/
  @Schema(description = "")
  public Integer getLogoMaxPx() {
    return logoMaxPx;
  }

  public void setLogoMaxPx(Integer logoMaxPx) {
    this.logoMaxPx = logoMaxPx;
  }

  public LogosProperties logoMinPx(Integer logoMinPx) {
    this.logoMinPx = logoMinPx;
    return this;
  }

   /**
   * Get logoMinPx
   * @return logoMinPx
  **/
  @Schema(description = "")
  public Integer getLogoMinPx() {
    return logoMinPx;
  }

  public void setLogoMinPx(Integer logoMinPx) {
    this.logoMinPx = logoMinPx;
  }

  public LogosProperties logoMaxBytes(Integer logoMaxBytes) {
    this.logoMaxBytes = logoMaxBytes;
    return this;
  }

   /**
   * Get logoMaxBytes
   * @return logoMaxBytes
  **/
  @Schema(description = "")
  public Integer getLogoMaxBytes() {
    return logoMaxBytes;
  }

  public void setLogoMaxBytes(Integer logoMaxBytes) {
    this.logoMaxBytes = logoMaxBytes;
  }

  public LogosProperties logoCacheHours(Integer logoCacheHours) {
    this.logoCacheHours = logoCacheHours;
    return this;
  }

   /**
   * Get logoCacheHours
   * @return logoCacheHours
  **/
  @Schema(description = "")
  public Integer getLogoCacheHours() {
    return logoCacheHours;
  }

  public void setLogoCacheHours(Integer logoCacheHours) {
    this.logoCacheHours = logoCacheHours;
  }

  public LogosProperties defaultBrandSvg(String defaultBrandSvg) {
    this.defaultBrandSvg = defaultBrandSvg;
    return this;
  }

   /**
   * Get defaultBrandSvg
   * @return defaultBrandSvg
  **/
  @Schema(description = "")
  public String getDefaultBrandSvg() {
    return defaultBrandSvg;
  }

  public void setDefaultBrandSvg(String defaultBrandSvg) {
    this.defaultBrandSvg = defaultBrandSvg;
  }

  public LogosProperties logoWithNameSvg(String logoWithNameSvg) {
    this.logoWithNameSvg = logoWithNameSvg;
    return this;
  }

   /**
   * Get logoWithNameSvg
   * @return logoWithNameSvg
  **/
  @Schema(description = "")
  public String getLogoWithNameSvg() {
    return logoWithNameSvg;
  }

  public void setLogoWithNameSvg(String logoWithNameSvg) {
    this.logoWithNameSvg = logoWithNameSvg;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LogosProperties logosProperties = (LogosProperties) o;
    return Objects.equals(this.logoCircleSvg, logosProperties.logoCircleSvg) &&
        Objects.equals(this.mimeTypes, logosProperties.mimeTypes) &&
        Objects.equals(this.logoMaxPx, logosProperties.logoMaxPx) &&
        Objects.equals(this.logoMinPx, logosProperties.logoMinPx) &&
        Objects.equals(this.logoMaxBytes, logosProperties.logoMaxBytes) &&
        Objects.equals(this.logoCacheHours, logosProperties.logoCacheHours) &&
        Objects.equals(this.defaultBrandSvg, logosProperties.defaultBrandSvg) &&
        Objects.equals(this.logoWithNameSvg, logosProperties.logoWithNameSvg);
  }

  @Override
  public int hashCode() {
    return Objects.hash(logoCircleSvg, mimeTypes, logoMaxPx, logoMinPx, logoMaxBytes, logoCacheHours, defaultBrandSvg, logoWithNameSvg);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LogosProperties {\n");
    
    sb.append("    logoCircleSvg: ").append(toIndentedString(logoCircleSvg)).append("\n");
    sb.append("    mimeTypes: ").append(toIndentedString(mimeTypes)).append("\n");
    sb.append("    logoMaxPx: ").append(toIndentedString(logoMaxPx)).append("\n");
    sb.append("    logoMinPx: ").append(toIndentedString(logoMinPx)).append("\n");
    sb.append("    logoMaxBytes: ").append(toIndentedString(logoMaxBytes)).append("\n");
    sb.append("    logoCacheHours: ").append(toIndentedString(logoCacheHours)).append("\n");
    sb.append("    defaultBrandSvg: ").append(toIndentedString(defaultBrandSvg)).append("\n");
    sb.append("    logoWithNameSvg: ").append(toIndentedString(logoWithNameSvg)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
