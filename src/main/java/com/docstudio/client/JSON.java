/*
 * DocStudio Api Documentation
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: R127.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.docstudio.client;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapter;
import com.google.gson.internal.bind.util.ISO8601Utils;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.google.gson.JsonElement;
import io.gsonfire.GsonFireBuilder;
import io.gsonfire.TypeSelector;

import okio.ByteString;

import java.io.IOException;
import java.io.StringReader;
import java.lang.reflect.Type;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.ParsePosition;
import java.time.LocalDate;
import java.time.OffsetDateTime;
import java.time.format.DateTimeFormatter;
import java.util.Date;
import java.util.Locale;
import java.util.Map;
import java.util.HashMap;

/*
 * A JSON utility class
 *
 * NOTE: in the future, this class may be converted to static, which may break
 *       backward-compatibility
 */
public class JSON {
    private static Gson gson;
    private static boolean isLenientOnJson = false;
    private static DateTypeAdapter dateTypeAdapter = new DateTypeAdapter();
    private static SqlDateTypeAdapter sqlDateTypeAdapter = new SqlDateTypeAdapter();
    private static OffsetDateTimeTypeAdapter offsetDateTimeTypeAdapter = new OffsetDateTimeTypeAdapter();
    private static LocalDateTypeAdapter localDateTypeAdapter = new LocalDateTypeAdapter();
    private static ByteArrayAdapter byteArrayAdapter = new ByteArrayAdapter();

    @SuppressWarnings("unchecked")
    public static GsonBuilder createGson() {
        GsonFireBuilder fireBuilder = new GsonFireBuilder()
        ;
        GsonBuilder builder = fireBuilder.createGsonBuilder();
        return builder;
    }

    private static String getDiscriminatorValue(JsonElement readElement, String discriminatorField) {
        JsonElement element = readElement.getAsJsonObject().get(discriminatorField);
        if (null == element) {
            throw new IllegalArgumentException("missing discriminator field: <" + discriminatorField + ">");
        }
        return element.getAsString();
    }

    /**
     * Returns the Java class that implements the OpenAPI schema for the specified discriminator value.
     *
     * @param classByDiscriminatorValue The map of discriminator values to Java classes.
     * @param discriminatorValue The value of the OpenAPI discriminator in the input data.
     * @return The Java class that implements the OpenAPI schema
     */
    private static Class getClassByDiscriminator(Map classByDiscriminatorValue, String discriminatorValue) {
        Class clazz = (Class) classByDiscriminatorValue.get(discriminatorValue);
        if (null == clazz) {
            throw new IllegalArgumentException("cannot determine model class of name: <" + discriminatorValue + ">");
        }
        return clazz;
    }

    static {
        GsonBuilder gsonBuilder = createGson();
        gsonBuilder.registerTypeAdapter(Date.class, dateTypeAdapter);
        gsonBuilder.registerTypeAdapter(java.sql.Date.class, sqlDateTypeAdapter);
        gsonBuilder.registerTypeAdapter(OffsetDateTime.class, offsetDateTimeTypeAdapter);
        gsonBuilder.registerTypeAdapter(LocalDate.class, localDateTypeAdapter);
        gsonBuilder.registerTypeAdapter(byte[].class, byteArrayAdapter);
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.AccountAddressDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.AccountBillingCounterValueDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.AccountBillingEventDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.AccountBillingInfoDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.AccountBillingTariffInfoDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.AccountCreateDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.AccountDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.AccountDomainCreateDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.AccountDomainDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.AccountDomainUpdateDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.AccountDomainVerifyInfo.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.AccountMailboxInfoDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.AccountPermissionsDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.AccountPoliciesDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.AccountSsoIdProviderDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.AccountSsoIdProviderShortDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.AccountSsoIdProviderUpdateDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.AccountTariffInfo.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.AccountUserDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.ActivityLogRecordDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.AliasDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.AliasNameDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.AppLinks.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.AppLocales.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.AppPageScripts.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.AppTokenDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.ApprovalStatusDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.ApproverDetailsDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.AttachmentFileAllowance.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.AttachmentRestriction.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.AttributeInfoDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.AuditTrailDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.AuditTrailInfoRecordDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.BasePermissionsDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.BillingHeaderState.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.BillingInvoiceStatusDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.BillingPaymentDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.BillingProperties.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.BillingRedirectDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.BulkEnvelopeActionDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.CallbackEnvelopeDataDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.CallbackEnvelopeFilterDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.CategoryDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.ChainEnvelopeDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.ChangeAccountTariffResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.ChangeDomainStatusDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.ChunkUploadProps.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.CommentAccessDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.CommentMessageDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.CommentPostDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.CommentPutDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.CommentThreadDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.CommonExceptionDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.ConfirmUploadDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.ContactDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.ContactResponseDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.ConversionLogRecord.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.CorporateProfileDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.CorporateUserCreateDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.CounterInfoDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.CreateAppTokenDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.CreateEnvelopeCallbackDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.CreateRecordsResponseDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.CryptoConfigDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.CryptoProperties.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.CsvData.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.CsvSettings.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.CurrencyRateDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.DataMap.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.DefaultEnvelopeListColumns.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.DeleteEnvColumnDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.DetailedTariffInfoDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.DetectedCountryDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.DictionaryCheckResponseDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.DictionaryColumnRequestDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.DictionaryColumnResponseDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.DictionaryColumnValueRequestDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.DictionaryColumnValueResponseDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.DictionaryColumnValueSearchDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.DictionaryDownloadParamsDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.DictionaryFiltersRequestDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.DictionaryRecordValuesResponseDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.DictionaryRecordsRequestDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.DictionaryRequestDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.DictionaryResponseDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.DocFormulaRequestDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.DocIdSignatureNameDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.DocumentCommentsDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.DocumentFileForSignRequestDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.DocumentForSigningDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.DocumentPageSizeDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.DocumentsForSignRequestDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.EinkSignRestriction.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.EmailProperties.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.EnvApprovalSearchResultDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.EnvCancellationRequestDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.EnvDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.EnvDelegationDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.EnvGetDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.EnvPostDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.EnvSharedToDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.EnvTableRestriction.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.EnvelopeApprovalHistoryDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.EnvelopeApprovalPageDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.EnvelopeApprovalRequestDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.EnvelopeApproverDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.EnvelopeApproverGetDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.EnvelopeCallbackDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.EnvelopeCancelDelegationDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.EnvelopeCheckResultDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.EnvelopeConfirmInviteDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.EnvelopeConfirmInviteRoleDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.EnvelopeDocumentSignatureDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.EnvelopeDocumentSignaturesDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.EnvelopeExtraFieldDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.EnvelopeFlowInfoDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.EnvelopeListColumn.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.EnvelopeListColumnExtra.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.EnvelopePageDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.EnvelopeProcessingResult.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.EnvelopeRestrictions.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.EnvelopeScenarioDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.EnvelopeSearchField.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.EnvelopeSendResultDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.EnvelopeSenderDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.EnvelopeSharedArchiveRequestDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.EnvelopeSharedCopyRequestDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.EnvelopeTemplateInfoDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.EnvelopeToMailboxDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.EnvelopeValidationError.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.EnvelopeViewColumn.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.EnvelopeWithFlow.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.EnvelopeWithTemplateDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.ExchangeAs2Props.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.ExchangeAs4DbnaProps.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.ExchangeProperties.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.ExchangeProtocolProps.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.ExchangeSshProps.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.ExportTaskStatusDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.ExternalLinkRequestDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.ExternalLinkResponseDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.ExternalLinkShortResponseDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.FailedEnvelopeCallbackFilterDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.FieldRestriction.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.FilterDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.FilterSettingsCreateDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.FilterSettingsDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.FullTemplateResponseDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.GeneratedEnvelope.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.GeolocationInfoDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.GeolocationProperties.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.GetEnvelopeInviteInfoDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.GroupInfoDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.GroupListInfoDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.ImageRestriction.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.ImportTaskDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.IntegrationDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.IntegrationDefaultRuleDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.IntegrationReprocessRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.IntegrationRule.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.IntegrationRuleListItem.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.IntegrationRuleRequestDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.IntegrationRuleResponseDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.IntegrationRuleValidationFile.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.InvitationPostDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.InvitationPutDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.InvitedEnvelopeInfoDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.LabelAssociationDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.LabelDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.LocaleItemDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.LoginCheckResponseDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.LoginDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.LoginEnvelopeResponseDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.LoginResponseDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.LogoImageRestriction.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.LogosProperties.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.MailboxAccountSimpleDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.MailboxApprovalFlowDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.MailboxApprovalFlowGetDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.MailboxCreateDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.MailboxDashboardDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.MailboxDelegationDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.MailboxEssentialsDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.MailboxInfoDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.MailboxNameUuidDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.MailboxPatchRequestDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.MailboxProfileDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.MailboxProperties.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.MailboxRolePermissionDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.MailboxSearchResultDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.MailboxSimpleDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.MailboxUpdateRequestDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.MailboxesSearchFilterDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.ModifierInfoDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.NameUuidDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.NewEnvColumnDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.NewTemplateZipStructureDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.OAuthProperties.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.OneTimeSendDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.PageDTOAccountDomainDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.PageDTOAccountMailboxInfoDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.PageDTOActivityLogRecordDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.PageDTOContactResponseDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.PageDTOConversionLogRecord.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.PageDTODataMap.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.PageDTODictionaryColumnValueResponseDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.PageDTODictionaryRecordValuesResponseDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.PageDTODictionaryResponseDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.PageDTOEnvelopeToMailboxDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.PageDTOGroupListInfoDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.PageDTOMailboxApprovalFlowGetDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.PageDTOObject.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.PageDTORoleGetDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.PageDTOScenarioShortDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.PageDTOSearchTemplateDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.PageDTOUsedTemplateDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.PageDTOUserInvitationDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.PageDTOUserMailboxPermissionsDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.PageDTOUserNotificationResponseDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.PasswordPolicy.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.PaymentMethodInfo.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.PaymentProviderInfo.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.PdfPageSizes.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.PdfPropertiesDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.PermissionsDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.PermissionsWithUuidDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.ProcessStatus.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.ProfileDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.QuickSendDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.QuickSendRecipientDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.RecentlyUsedTemplateResponseDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.RecommendedTemplateResponseDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.RenewPasswordDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.ReplaceAccountTariffDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.ReportEnvelopeRequestDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.ReportMailboxesRequestDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.ReportUsersRequestDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.RequestValCodeDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.RequiredSignatureDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.ResetPasswordDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.ResolveCommentThreadDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.RoleCreateDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.RoleGetDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.RoleShortDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.SamlSsoProps.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.ScenarioDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.ScenarioShortDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.ScenarioShortStepDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.ScenarioShortStepTemplateInfoDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.ScenarioStepDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.ScenarioStepTemplateInfoDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.SearchActivityLogDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.SearchApprovalsDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.SearchEnvelopesDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.SearchFieldRestriction.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.SearchFieldValueDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.SearchRestriction.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.SearchTemplateDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.SendEnvByCodeDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.SessionPolicy.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.SettingsDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.ShareRestriction.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.SharedCodeDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.SingleDocForSignRequestDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.SingleUuidDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.SsoEntityDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.SsoProperties.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.StampRequestDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.StatDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.SupportedBarcodeDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.TableDetails.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.TariffDetails.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.TemplTableRestriction.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.TemplateCreateDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.TemplateRestriction.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.TemplateRolesDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.TemplateValidateResponseDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.TemplateZipStructureDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.TemplateZipStructureTitlesDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.TextFieldPattern.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.UpdateAccountRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.UpdateEnvColumnDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.UpdateGroupDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.UpdatePasswordDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.UpdateProfileDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.UploadedAttachmentDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.UploadedImageDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.UploadedPdfDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.UsedTemplateDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.User2AccountWithMailboxesDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.User2MailboxDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.UserAuthorizationDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.UserCreateByCodeDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.UserCreateDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.UserDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.UserInfoDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.UserInvitationDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.UserMailboxPermissionsDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.UserNotificationResponseDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.UserPermissionDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.UserProperties.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.UsersSearchFilterDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.ValidationResponseDTO.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.docstudio.client.model.ZipEntityDTO.CustomTypeAdapterFactory());
        gson = gsonBuilder.create();
    }

    /**
     * Get Gson.
     *
     * @return Gson
     */
    public static Gson getGson() {
        return gson;
    }

    /**
     * Set Gson.
     *
     * @param gson Gson
     */
    public static void setGson(Gson gson) {
        JSON.gson = gson;
    }

    public static void setLenientOnJson(boolean lenientOnJson) {
        isLenientOnJson = lenientOnJson;
    }

    /**
     * Serialize the given Java object into JSON string.
     *
     * @param obj Object
     * @return String representation of the JSON
     */
    public static String serialize(Object obj) {
        return gson.toJson(obj);
    }

    /**
     * Deserialize the given JSON string to Java object.
     *
     * @param <T>        Type
     * @param body       The JSON string
     * @param returnType The type to deserialize into
     * @return The deserialized Java object
     */
    @SuppressWarnings("unchecked")
    public static <T> T deserialize(String body, Type returnType) {
        try {
            if (isLenientOnJson) {
                JsonReader jsonReader = new JsonReader(new StringReader(body));
                // see https://google-gson.googlecode.com/svn/trunk/gson/docs/javadocs/com/google/gson/stream/JsonReader.html#setLenient(boolean)
                jsonReader.setLenient(true);
                return gson.fromJson(jsonReader, returnType);
            } else {
                return gson.fromJson(body, returnType);
            }
        } catch (JsonParseException e) {
            // Fallback processing when failed to parse JSON form response body:
            // return the response body string directly for the String return type;
            if (returnType.equals(String.class)) {
                return (T) body;
            } else {
                throw (e);
            }
        }
    }

    /**
     * Gson TypeAdapter for Byte Array type
     */
    public static class ByteArrayAdapter extends TypeAdapter<byte[]> {

        @Override
        public void write(JsonWriter out, byte[] value) throws IOException {
            if (value == null) {
                out.nullValue();
            } else {
                out.value(ByteString.of(value).base64());
            }
        }

        @Override
        public byte[] read(JsonReader in) throws IOException {
            switch (in.peek()) {
                case NULL:
                    in.nextNull();
                    return null;
                default:
                    String bytesAsBase64 = in.nextString();
                    ByteString byteString = ByteString.decodeBase64(bytesAsBase64);
                    return byteString.toByteArray();
            }
        }
    }

    /**
     * Gson TypeAdapter for JSR310 OffsetDateTime type
     */
    public static class OffsetDateTimeTypeAdapter extends TypeAdapter<OffsetDateTime> {

        private DateTimeFormatter formatter;

        public OffsetDateTimeTypeAdapter() {
            this(DateTimeFormatter.ISO_OFFSET_DATE_TIME);
        }

        public OffsetDateTimeTypeAdapter(DateTimeFormatter formatter) {
            this.formatter = formatter;
        }

        public void setFormat(DateTimeFormatter dateFormat) {
            this.formatter = dateFormat;
        }

        @Override
        public void write(JsonWriter out, OffsetDateTime date) throws IOException {
            if (date == null) {
                out.nullValue();
            } else {
                out.value(formatter.format(date));
            }
        }

        @Override
        public OffsetDateTime read(JsonReader in) throws IOException {
            switch (in.peek()) {
                case NULL:
                    in.nextNull();
                    return null;
                default:
                    String date = in.nextString();
                    if (date.endsWith("+0000")) {
                        date = date.substring(0, date.length()-5) + "Z";
                    }
                    return OffsetDateTime.parse(date, formatter);
            }
        }
    }

    /**
     * Gson TypeAdapter for JSR310 LocalDate type
     */
    public static class LocalDateTypeAdapter extends TypeAdapter<LocalDate> {

        private DateTimeFormatter formatter;

        public LocalDateTypeAdapter() {
            this(DateTimeFormatter.ISO_LOCAL_DATE);
        }

        public LocalDateTypeAdapter(DateTimeFormatter formatter) {
            this.formatter = formatter;
        }

        public void setFormat(DateTimeFormatter dateFormat) {
            this.formatter = dateFormat;
        }

        @Override
        public void write(JsonWriter out, LocalDate date) throws IOException {
            if (date == null) {
                out.nullValue();
            } else {
                out.value(formatter.format(date));
            }
        }

        @Override
        public LocalDate read(JsonReader in) throws IOException {
            switch (in.peek()) {
                case NULL:
                    in.nextNull();
                    return null;
                default:
                    String date = in.nextString();
                    return LocalDate.parse(date, formatter);
            }
        }
    }

    public static void setOffsetDateTimeFormat(DateTimeFormatter dateFormat) {
        offsetDateTimeTypeAdapter.setFormat(dateFormat);
    }

    public static void setLocalDateFormat(DateTimeFormatter dateFormat) {
        localDateTypeAdapter.setFormat(dateFormat);
    }

    /**
     * Gson TypeAdapter for java.sql.Date type
     * If the dateFormat is null, a simple "yyyy-MM-dd" format will be used
     * (more efficient than SimpleDateFormat).
     */
    public static class SqlDateTypeAdapter extends TypeAdapter<java.sql.Date> {

        private DateFormat dateFormat;

        public SqlDateTypeAdapter() {}

        public SqlDateTypeAdapter(DateFormat dateFormat) {
            this.dateFormat = dateFormat;
        }

        public void setFormat(DateFormat dateFormat) {
            this.dateFormat = dateFormat;
        }

        @Override
        public void write(JsonWriter out, java.sql.Date date) throws IOException {
            if (date == null) {
                out.nullValue();
            } else {
                String value;
                if (dateFormat != null) {
                    value = dateFormat.format(date);
                } else {
                    value = date.toString();
                }
                out.value(value);
            }
        }

        @Override
        public java.sql.Date read(JsonReader in) throws IOException {
            switch (in.peek()) {
                case NULL:
                    in.nextNull();
                    return null;
                default:
                    String date = in.nextString();
                    try {
                        if (dateFormat != null) {
                            return new java.sql.Date(dateFormat.parse(date).getTime());
                        }
                        return new java.sql.Date(ISO8601Utils.parse(date, new ParsePosition(0)).getTime());
                    } catch (ParseException e) {
                        throw new JsonParseException(e);
                    }
            }
        }
    }

    /**
     * Gson TypeAdapter for java.util.Date type
     * If the dateFormat is null, ISO8601Utils will be used.
     */
    public static class DateTypeAdapter extends TypeAdapter<Date> {

        private DateFormat dateFormat;

        public DateTypeAdapter() {}

        public DateTypeAdapter(DateFormat dateFormat) {
            this.dateFormat = dateFormat;
        }

        public void setFormat(DateFormat dateFormat) {
            this.dateFormat = dateFormat;
        }

        @Override
        public void write(JsonWriter out, Date date) throws IOException {
            if (date == null) {
                out.nullValue();
            } else {
                String value;
                if (dateFormat != null) {
                    value = dateFormat.format(date);
                } else {
                    value = ISO8601Utils.format(date, true);
                }
                out.value(value);
            }
        }

        @Override
        public Date read(JsonReader in) throws IOException {
            try {
                switch (in.peek()) {
                    case NULL:
                        in.nextNull();
                        return null;
                    default:
                        String date = in.nextString();
                        try {
                            if (dateFormat != null) {
                                return dateFormat.parse(date);
                            }
                            return ISO8601Utils.parse(date, new ParsePosition(0));
                        } catch (ParseException e) {
                            throw new JsonParseException(e);
                        }
                }
            } catch (IllegalArgumentException e) {
                throw new JsonParseException(e);
            }
        }
    }

    public static void setDateFormat(DateFormat dateFormat) {
        dateTypeAdapter.setFormat(dateFormat);
    }

    public static void setSqlDateFormat(DateFormat dateFormat) {
        sqlDateTypeAdapter.setFormat(dateFormat);
    }
}
