/*
 * DocStudio Api Documentation
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: R86.31
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.docstudio.client.model;

import java.util.Objects;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;

import java.util.ArrayList;
import java.util.List;
/**
 * Session policy
 */
@Schema(description = "Session policy")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-08-14T22:02:04.375144579Z[GMT]")

public class SessionPolicy {
  @SerializedName("sessionHours")
  private Integer sessionHours = null;

  @SerializedName("singleSession")
  private Boolean singleSession = null;

  @SerializedName("singleIpSession")
  private Boolean singleIpSession = null;

  @SerializedName("maxLoginAttempts")
  private Integer maxLoginAttempts = null;

  @SerializedName("maxAttemptsTimeoutMinutes")
  private Integer maxAttemptsTimeoutMinutes = null;

  @SerializedName("allowedIps")
  private List<String> allowedIps = null;

  @SerializedName("blockedIps")
  private List<String> blockedIps = null;

  public SessionPolicy sessionHours(Integer sessionHours) {
    this.sessionHours = sessionHours;
    return this;
  }

   /**
   * Get sessionHours
   * @return sessionHours
  **/
  @Schema(description = "")
  public Integer getSessionHours() {
    return sessionHours;
  }

  public void setSessionHours(Integer sessionHours) {
    this.sessionHours = sessionHours;
  }

  public SessionPolicy singleSession(Boolean singleSession) {
    this.singleSession = singleSession;
    return this;
  }

   /**
   * Get singleSession
   * @return singleSession
  **/
  @Schema(description = "")
  public Boolean isSingleSession() {
    return singleSession;
  }

  public void setSingleSession(Boolean singleSession) {
    this.singleSession = singleSession;
  }

  public SessionPolicy singleIpSession(Boolean singleIpSession) {
    this.singleIpSession = singleIpSession;
    return this;
  }

   /**
   * Get singleIpSession
   * @return singleIpSession
  **/
  @Schema(description = "")
  public Boolean isSingleIpSession() {
    return singleIpSession;
  }

  public void setSingleIpSession(Boolean singleIpSession) {
    this.singleIpSession = singleIpSession;
  }

  public SessionPolicy maxLoginAttempts(Integer maxLoginAttempts) {
    this.maxLoginAttempts = maxLoginAttempts;
    return this;
  }

   /**
   * Get maxLoginAttempts
   * @return maxLoginAttempts
  **/
  @Schema(description = "")
  public Integer getMaxLoginAttempts() {
    return maxLoginAttempts;
  }

  public void setMaxLoginAttempts(Integer maxLoginAttempts) {
    this.maxLoginAttempts = maxLoginAttempts;
  }

  public SessionPolicy maxAttemptsTimeoutMinutes(Integer maxAttemptsTimeoutMinutes) {
    this.maxAttemptsTimeoutMinutes = maxAttemptsTimeoutMinutes;
    return this;
  }

   /**
   * Get maxAttemptsTimeoutMinutes
   * @return maxAttemptsTimeoutMinutes
  **/
  @Schema(description = "")
  public Integer getMaxAttemptsTimeoutMinutes() {
    return maxAttemptsTimeoutMinutes;
  }

  public void setMaxAttemptsTimeoutMinutes(Integer maxAttemptsTimeoutMinutes) {
    this.maxAttemptsTimeoutMinutes = maxAttemptsTimeoutMinutes;
  }

  public SessionPolicy allowedIps(List<String> allowedIps) {
    this.allowedIps = allowedIps;
    return this;
  }

  public SessionPolicy addAllowedIpsItem(String allowedIpsItem) {
    if (this.allowedIps == null) {
      this.allowedIps = new ArrayList<String>();
    }
    this.allowedIps.add(allowedIpsItem);
    return this;
  }

   /**
   * Get allowedIps
   * @return allowedIps
  **/
  @Schema(description = "")
  public List<String> getAllowedIps() {
    return allowedIps;
  }

  public void setAllowedIps(List<String> allowedIps) {
    this.allowedIps = allowedIps;
  }

  public SessionPolicy blockedIps(List<String> blockedIps) {
    this.blockedIps = blockedIps;
    return this;
  }

  public SessionPolicy addBlockedIpsItem(String blockedIpsItem) {
    if (this.blockedIps == null) {
      this.blockedIps = new ArrayList<String>();
    }
    this.blockedIps.add(blockedIpsItem);
    return this;
  }

   /**
   * Get blockedIps
   * @return blockedIps
  **/
  @Schema(description = "")
  public List<String> getBlockedIps() {
    return blockedIps;
  }

  public void setBlockedIps(List<String> blockedIps) {
    this.blockedIps = blockedIps;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SessionPolicy sessionPolicy = (SessionPolicy) o;
    return Objects.equals(this.sessionHours, sessionPolicy.sessionHours) &&
        Objects.equals(this.singleSession, sessionPolicy.singleSession) &&
        Objects.equals(this.singleIpSession, sessionPolicy.singleIpSession) &&
        Objects.equals(this.maxLoginAttempts, sessionPolicy.maxLoginAttempts) &&
        Objects.equals(this.maxAttemptsTimeoutMinutes, sessionPolicy.maxAttemptsTimeoutMinutes) &&
        Objects.equals(this.allowedIps, sessionPolicy.allowedIps) &&
        Objects.equals(this.blockedIps, sessionPolicy.blockedIps);
  }

  @Override
  public int hashCode() {
    return Objects.hash(sessionHours, singleSession, singleIpSession, maxLoginAttempts, maxAttemptsTimeoutMinutes, allowedIps, blockedIps);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SessionPolicy {\n");
    
    sb.append("    sessionHours: ").append(toIndentedString(sessionHours)).append("\n");
    sb.append("    singleSession: ").append(toIndentedString(singleSession)).append("\n");
    sb.append("    singleIpSession: ").append(toIndentedString(singleIpSession)).append("\n");
    sb.append("    maxLoginAttempts: ").append(toIndentedString(maxLoginAttempts)).append("\n");
    sb.append("    maxAttemptsTimeoutMinutes: ").append(toIndentedString(maxAttemptsTimeoutMinutes)).append("\n");
    sb.append("    allowedIps: ").append(toIndentedString(allowedIps)).append("\n");
    sb.append("    blockedIps: ").append(toIndentedString(blockedIps)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
