/*
 * DocStudio Api Documentation
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: R82.8
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.docstudio.client.model;

import java.util.Objects;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.UUID;
/**
 * Integration info
 */
@Schema(description = "Integration info")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-06-19T23:56:47.469723923Z[GMT]")

public class IntegrationDTO {
  @SerializedName("mailboxUuid")
  private UUID mailboxUuid = null;

  @SerializedName("active")
  private Boolean active = null;

  /**
   * Integration protocol
   */
  @JsonAdapter(ProtocolEnum.Adapter.class)
  public enum ProtocolEnum {
    @SerializedName("ftps")
    FTPS("ftps"),
    @SerializedName("soap")
    SOAP("soap"),
    @SerializedName("as2")
    AS2("as2");

    private String value;

    ProtocolEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static ProtocolEnum fromValue(String input) {
      for (ProtocolEnum b : ProtocolEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<ProtocolEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ProtocolEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public ProtocolEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return ProtocolEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("protocol")
  private ProtocolEnum protocol = null;

  @SerializedName("protocolSettings")
  private IntegrationProtocolSettingsDTO protocolSettings = null;

  @SerializedName("defaultRule")
  private IntegrationDefaultRuleDTO defaultRule = null;

  public IntegrationDTO mailboxUuid(UUID mailboxUuid) {
    this.mailboxUuid = mailboxUuid;
    return this;
  }

   /**
   * Mailbox uuid
   * @return mailboxUuid
  **/
  @Schema(required = true, description = "Mailbox uuid")
  public UUID getMailboxUuid() {
    return mailboxUuid;
  }

  public void setMailboxUuid(UUID mailboxUuid) {
    this.mailboxUuid = mailboxUuid;
  }

  public IntegrationDTO active(Boolean active) {
    this.active = active;
    return this;
  }

   /**
   * Integration status
   * @return active
  **/
  @Schema(required = true, description = "Integration status")
  public Boolean isActive() {
    return active;
  }

  public void setActive(Boolean active) {
    this.active = active;
  }

  public IntegrationDTO protocol(ProtocolEnum protocol) {
    this.protocol = protocol;
    return this;
  }

   /**
   * Integration protocol
   * @return protocol
  **/
  @Schema(required = true, description = "Integration protocol")
  public ProtocolEnum getProtocol() {
    return protocol;
  }

  public void setProtocol(ProtocolEnum protocol) {
    this.protocol = protocol;
  }

  public IntegrationDTO protocolSettings(IntegrationProtocolSettingsDTO protocolSettings) {
    this.protocolSettings = protocolSettings;
    return this;
  }

   /**
   * Get protocolSettings
   * @return protocolSettings
  **/
  @Schema(required = true, description = "")
  public IntegrationProtocolSettingsDTO getProtocolSettings() {
    return protocolSettings;
  }

  public void setProtocolSettings(IntegrationProtocolSettingsDTO protocolSettings) {
    this.protocolSettings = protocolSettings;
  }

  public IntegrationDTO defaultRule(IntegrationDefaultRuleDTO defaultRule) {
    this.defaultRule = defaultRule;
    return this;
  }

   /**
   * Get defaultRule
   * @return defaultRule
  **/
  @Schema(required = true, description = "")
  public IntegrationDefaultRuleDTO getDefaultRule() {
    return defaultRule;
  }

  public void setDefaultRule(IntegrationDefaultRuleDTO defaultRule) {
    this.defaultRule = defaultRule;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IntegrationDTO integrationDTO = (IntegrationDTO) o;
    return Objects.equals(this.mailboxUuid, integrationDTO.mailboxUuid) &&
        Objects.equals(this.active, integrationDTO.active) &&
        Objects.equals(this.protocol, integrationDTO.protocol) &&
        Objects.equals(this.protocolSettings, integrationDTO.protocolSettings) &&
        Objects.equals(this.defaultRule, integrationDTO.defaultRule);
  }

  @Override
  public int hashCode() {
    return Objects.hash(mailboxUuid, active, protocol, protocolSettings, defaultRule);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IntegrationDTO {\n");
    
    sb.append("    mailboxUuid: ").append(toIndentedString(mailboxUuid)).append("\n");
    sb.append("    active: ").append(toIndentedString(active)).append("\n");
    sb.append("    protocol: ").append(toIndentedString(protocol)).append("\n");
    sb.append("    protocolSettings: ").append(toIndentedString(protocolSettings)).append("\n");
    sb.append("    defaultRule: ").append(toIndentedString(defaultRule)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
