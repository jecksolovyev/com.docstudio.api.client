/*
 * DocStudio Api Documentation
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: R82.8
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.docstudio.client.model;

import java.util.Objects;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;

import java.util.ArrayList;
import java.util.List;
import java.util.UUID;
/**
 * Mailbox update data
 */
@Schema(description = "Mailbox update data")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-06-19T23:56:47.469723923Z[GMT]")

public class MailboxUpdateRequestDTO {
  @SerializedName("name")
  private String name = null;

  @SerializedName("archived")
  private Boolean archived = null;

  @SerializedName("aliases")
  private List<AliasNameDTO> aliases = new ArrayList<AliasNameDTO>();

  @SerializedName("hideNameForAccounts")
  private Boolean hideNameForAccounts = null;

  @SerializedName("autoDelegationEnabled")
  private Boolean autoDelegationEnabled = null;

  @SerializedName("delegateTo")
  private UUID delegateTo = null;

  @SerializedName("autoDelegateUntil")
  private String autoDelegateUntil = null;

  public MailboxUpdateRequestDTO name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Mailbox name
   * @return name
  **/
  @Schema(required = true, description = "Mailbox name")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public MailboxUpdateRequestDTO archived(Boolean archived) {
    this.archived = archived;
    return this;
  }

   /**
   * Mailbox archived
   * @return archived
  **/
  @Schema(required = true, description = "Mailbox archived")
  public Boolean isArchived() {
    return archived;
  }

  public void setArchived(Boolean archived) {
    this.archived = archived;
  }

  public MailboxUpdateRequestDTO aliases(List<AliasNameDTO> aliases) {
    this.aliases = aliases;
    return this;
  }

  public MailboxUpdateRequestDTO addAliasesItem(AliasNameDTO aliasesItem) {
    this.aliases.add(aliasesItem);
    return this;
  }

   /**
   * Get aliases
   * @return aliases
  **/
  @Schema(required = true, description = "")
  public List<AliasNameDTO> getAliases() {
    return aliases;
  }

  public void setAliases(List<AliasNameDTO> aliases) {
    this.aliases = aliases;
  }

  public MailboxUpdateRequestDTO hideNameForAccounts(Boolean hideNameForAccounts) {
    this.hideNameForAccounts = hideNameForAccounts;
    return this;
  }

   /**
   * Hide mailbox name/aliases from other accounts
   * @return hideNameForAccounts
  **/
  @Schema(required = true, description = "Hide mailbox name/aliases from other accounts")
  public Boolean isHideNameForAccounts() {
    return hideNameForAccounts;
  }

  public void setHideNameForAccounts(Boolean hideNameForAccounts) {
    this.hideNameForAccounts = hideNameForAccounts;
  }

  public MailboxUpdateRequestDTO autoDelegationEnabled(Boolean autoDelegationEnabled) {
    this.autoDelegationEnabled = autoDelegationEnabled;
    return this;
  }

   /**
   * Auto delegate is enabled
   * @return autoDelegationEnabled
  **/
  @Schema(required = true, description = "Auto delegate is enabled")
  public Boolean isAutoDelegationEnabled() {
    return autoDelegationEnabled;
  }

  public void setAutoDelegationEnabled(Boolean autoDelegationEnabled) {
    this.autoDelegationEnabled = autoDelegationEnabled;
  }

  public MailboxUpdateRequestDTO delegateTo(UUID delegateTo) {
    this.delegateTo = delegateTo;
    return this;
  }

   /**
   * Auto delegate envelopes to mailbox
   * @return delegateTo
  **/
  @Schema(description = "Auto delegate envelopes to mailbox")
  public UUID getDelegateTo() {
    return delegateTo;
  }

  public void setDelegateTo(UUID delegateTo) {
    this.delegateTo = delegateTo;
  }

  public MailboxUpdateRequestDTO autoDelegateUntil(String autoDelegateUntil) {
    this.autoDelegateUntil = autoDelegateUntil;
    return this;
  }

   /**
   * Auto delegate until date in &#x27;ISO-8601&#x27; format
   * @return autoDelegateUntil
  **/
  @Schema(description = "Auto delegate until date in 'ISO-8601' format")
  public String getAutoDelegateUntil() {
    return autoDelegateUntil;
  }

  public void setAutoDelegateUntil(String autoDelegateUntil) {
    this.autoDelegateUntil = autoDelegateUntil;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MailboxUpdateRequestDTO mailboxUpdateRequestDTO = (MailboxUpdateRequestDTO) o;
    return Objects.equals(this.name, mailboxUpdateRequestDTO.name) &&
        Objects.equals(this.archived, mailboxUpdateRequestDTO.archived) &&
        Objects.equals(this.aliases, mailboxUpdateRequestDTO.aliases) &&
        Objects.equals(this.hideNameForAccounts, mailboxUpdateRequestDTO.hideNameForAccounts) &&
        Objects.equals(this.autoDelegationEnabled, mailboxUpdateRequestDTO.autoDelegationEnabled) &&
        Objects.equals(this.delegateTo, mailboxUpdateRequestDTO.delegateTo) &&
        Objects.equals(this.autoDelegateUntil, mailboxUpdateRequestDTO.autoDelegateUntil);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, archived, aliases, hideNameForAccounts, autoDelegationEnabled, delegateTo, autoDelegateUntil);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MailboxUpdateRequestDTO {\n");
    
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    archived: ").append(toIndentedString(archived)).append("\n");
    sb.append("    aliases: ").append(toIndentedString(aliases)).append("\n");
    sb.append("    hideNameForAccounts: ").append(toIndentedString(hideNameForAccounts)).append("\n");
    sb.append("    autoDelegationEnabled: ").append(toIndentedString(autoDelegationEnabled)).append("\n");
    sb.append("    delegateTo: ").append(toIndentedString(delegateTo)).append("\n");
    sb.append("    autoDelegateUntil: ").append(toIndentedString(autoDelegateUntil)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
