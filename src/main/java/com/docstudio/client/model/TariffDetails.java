/*
 * DocStudio Api Documentation
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: R120.9
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.docstudio.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.UUID;
/**
 * Tariff details
 */
@Schema(description = "Tariff details")
@jakarta.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-12-12T19:25:03.673810363Z[GMT]")

public class TariffDetails {
  @SerializedName("id")
  private UUID id = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("price")
  private Long price = null;

  @SerializedName("tariffPriceApplyRule")
  private String tariffPriceApplyRule = null;

  @SerializedName("displayName")
  private String displayName = null;

  @SerializedName("publicAvailable")
  private Boolean publicAvailable = null;

  @SerializedName("prepay")
  private Boolean prepay = null;

  @SerializedName("active")
  private Boolean active = null;

  public TariffDetails id(UUID id) {
    this.id = id;
    return this;
  }

   /**
   * Id
   * @return id
  **/
  @Schema(description = "Id")
  public UUID getId() {
    return id;
  }

  public void setId(UUID id) {
    this.id = id;
  }

  public TariffDetails name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Name
   * @return name
  **/
  @Schema(description = "Name")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public TariffDetails price(Long price) {
    this.price = price;
    return this;
  }

   /**
   * Tariff price
   * @return price
  **/
  @Schema(description = "Tariff price")
  public Long getPrice() {
    return price;
  }

  public void setPrice(Long price) {
    this.price = price;
  }

  public TariffDetails tariffPriceApplyRule(String tariffPriceApplyRule) {
    this.tariffPriceApplyRule = tariffPriceApplyRule;
    return this;
  }

   /**
   * Tariff price apply rule
   * @return tariffPriceApplyRule
  **/
  @Schema(description = "Tariff price apply rule")
  public String getTariffPriceApplyRule() {
    return tariffPriceApplyRule;
  }

  public void setTariffPriceApplyRule(String tariffPriceApplyRule) {
    this.tariffPriceApplyRule = tariffPriceApplyRule;
  }

  public TariffDetails displayName(String displayName) {
    this.displayName = displayName;
    return this;
  }

   /**
   * Display name
   * @return displayName
  **/
  @Schema(description = "Display name")
  public String getDisplayName() {
    return displayName;
  }

  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }

  public TariffDetails publicAvailable(Boolean publicAvailable) {
    this.publicAvailable = publicAvailable;
    return this;
  }

   /**
   * Public availability
   * @return publicAvailable
  **/
  @Schema(description = "Public availability")
  public Boolean isPublicAvailable() {
    return publicAvailable;
  }

  public void setPublicAvailable(Boolean publicAvailable) {
    this.publicAvailable = publicAvailable;
  }

  public TariffDetails prepay(Boolean prepay) {
    this.prepay = prepay;
    return this;
  }

   /**
   * Prepay
   * @return prepay
  **/
  @Schema(description = "Prepay")
  public Boolean isPrepay() {
    return prepay;
  }

  public void setPrepay(Boolean prepay) {
    this.prepay = prepay;
  }

  public TariffDetails active(Boolean active) {
    this.active = active;
    return this;
  }

   /**
   * Active
   * @return active
  **/
  @Schema(description = "Active")
  public Boolean isActive() {
    return active;
  }

  public void setActive(Boolean active) {
    this.active = active;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TariffDetails tariffDetails = (TariffDetails) o;
    return Objects.equals(this.id, tariffDetails.id) &&
        Objects.equals(this.name, tariffDetails.name) &&
        Objects.equals(this.price, tariffDetails.price) &&
        Objects.equals(this.tariffPriceApplyRule, tariffDetails.tariffPriceApplyRule) &&
        Objects.equals(this.displayName, tariffDetails.displayName) &&
        Objects.equals(this.publicAvailable, tariffDetails.publicAvailable) &&
        Objects.equals(this.prepay, tariffDetails.prepay) &&
        Objects.equals(this.active, tariffDetails.active);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, price, tariffPriceApplyRule, displayName, publicAvailable, prepay, active);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TariffDetails {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    price: ").append(toIndentedString(price)).append("\n");
    sb.append("    tariffPriceApplyRule: ").append(toIndentedString(tariffPriceApplyRule)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    publicAvailable: ").append(toIndentedString(publicAvailable)).append("\n");
    sb.append("    prepay: ").append(toIndentedString(prepay)).append("\n");
    sb.append("    active: ").append(toIndentedString(active)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
