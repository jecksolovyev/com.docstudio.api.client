/*
 * DocStudio Api Documentation
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: R120.9
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.docstudio.client.model;

import com.docstudio.client.JSON;
import com.google.gson.*;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.reflect.TypeToken;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.*;

/**
 * AuditTrailDTO
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-12-13T14:03:07.416970900+02:00[Europe/Kiev]", comments = "Generator version: 7.10.0")
public class AuditTrailDTO {
  public static final String SERIALIZED_NAME_ENVELOPE_UUID = "envelopeUuid";
  @SerializedName(SERIALIZED_NAME_ENVELOPE_UUID)
  @javax.annotation.Nullable
  private UUID envelopeUuid;

  public static final String SERIALIZED_NAME_DATE_TIME = "dateTime";
  @SerializedName(SERIALIZED_NAME_DATE_TIME)
  @javax.annotation.Nullable
  private OffsetDateTime dateTime;

  public static final String SERIALIZED_NAME_USER_UUID = "userUuid";
  @SerializedName(SERIALIZED_NAME_USER_UUID)
  @javax.annotation.Nullable
  private UUID userUuid;

  public static final String SERIALIZED_NAME_MAILBOX_UUID = "mailboxUuid";
  @SerializedName(SERIALIZED_NAME_MAILBOX_UUID)
  @javax.annotation.Nullable
  private UUID mailboxUuid;

  public static final String SERIALIZED_NAME_MAILBOX_NAME = "mailboxName";
  @SerializedName(SERIALIZED_NAME_MAILBOX_NAME)
  @javax.annotation.Nullable
  private String mailboxName;

  public static final String SERIALIZED_NAME_USER_FIRST_AND_LAST_NAME = "userFirstAndLastName";
  @SerializedName(SERIALIZED_NAME_USER_FIRST_AND_LAST_NAME)
  @javax.annotation.Nullable
  private String userFirstAndLastName;

  /**
   * Gets or Sets operation
   */
  @JsonAdapter(OperationEnum.Adapter.class)
  public enum OperationEnum {
    CREATE_DRAFT_ENV("CREATE_DRAFT_ENV"),

    DRAFT_UPDATE("DRAFT_UPDATE"),

    SEND_ENVELOPE("SEND_ENVELOPE"),

    RECEIVE_ENVELOPE("RECEIVE_ENVELOPE"),

    VIEW_ENVELOPE("VIEW_ENVELOPE"),

    FILL_FIELDS("FILL_FIELDS"),

    APPROVED("APPROVED"),

    CANCEL("CANCEL"),

    COMPLETED("COMPLETED"),

    ARCHIVE("ARCHIVE"),

    UNARCHIVE("UNARCHIVE"),

    INVITATION_ACCEPT("INVITATION_ACCEPT"),

    SIGN_DOCUMENTS("SIGN_DOCUMENTS"),

    ENVELOPE_UPDATE("ENVELOPE_UPDATE"),

    ENVELOPE_DELEGATE("ENVELOPE_DELEGATE"),

    DELETE("DELETE"),

    RESTORE("RESTORE"),

    INFO("INFO"),

    ARCHIVE_SHARE("ARCHIVE_SHARE"),

    ARCHIVE_DOWNLOAD("ARCHIVE_DOWNLOAD"),

    COPY_SHARED("COPY_SHARED"),

    DELEGATION_CANCELLED("DELEGATION_CANCELLED");

    private String value;

    OperationEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static OperationEnum fromValue(String value) {
      for (OperationEnum b : OperationEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<OperationEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final OperationEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public OperationEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return OperationEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      OperationEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_OPERATION = "operation";
  @SerializedName(SERIALIZED_NAME_OPERATION)
  @javax.annotation.Nullable
  private OperationEnum operation;

  public static final String SERIALIZED_NAME_IP = "ip";
  @SerializedName(SERIALIZED_NAME_IP)
  @javax.annotation.Nullable
  private String ip;

  public static final String SERIALIZED_NAME_BROWSER = "browser";
  @SerializedName(SERIALIZED_NAME_BROWSER)
  @javax.annotation.Nullable
  private String browser;

  public static final String SERIALIZED_NAME_OS = "os";
  @SerializedName(SERIALIZED_NAME_OS)
  @javax.annotation.Nullable
  private String os;

  public static final String SERIALIZED_NAME_GEOLOCATION = "geolocation";
  @SerializedName(SERIALIZED_NAME_GEOLOCATION)
  @javax.annotation.Nullable
  private GeolocationInfoDTO geolocation;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  @javax.annotation.Nullable
  private String description;

  public static final String SERIALIZED_NAME_LATITUDE = "latitude";
  @SerializedName(SERIALIZED_NAME_LATITUDE)
  @javax.annotation.Nullable
  private Float latitude;

  public static final String SERIALIZED_NAME_LONGITUDE = "longitude";
  @SerializedName(SERIALIZED_NAME_LONGITUDE)
  @javax.annotation.Nullable
  private Float longitude;

  public AuditTrailDTO() {
  }

  public AuditTrailDTO envelopeUuid(@javax.annotation.Nullable UUID envelopeUuid) {
    this.envelopeUuid = envelopeUuid;
    return this;
  }

  /**
   * Get envelopeUuid
   * @return envelopeUuid
   */
  @javax.annotation.Nullable
  public UUID getEnvelopeUuid() {
    return envelopeUuid;
  }

  public void setEnvelopeUuid(@javax.annotation.Nullable UUID envelopeUuid) {
    this.envelopeUuid = envelopeUuid;
  }


  public AuditTrailDTO dateTime(@javax.annotation.Nullable OffsetDateTime dateTime) {
    this.dateTime = dateTime;
    return this;
  }

  /**
   * Get dateTime
   * @return dateTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getDateTime() {
    return dateTime;
  }

  public void setDateTime(@javax.annotation.Nullable OffsetDateTime dateTime) {
    this.dateTime = dateTime;
  }


  public AuditTrailDTO userUuid(@javax.annotation.Nullable UUID userUuid) {
    this.userUuid = userUuid;
    return this;
  }

  /**
   * Get userUuid
   * @return userUuid
   */
  @javax.annotation.Nullable
  public UUID getUserUuid() {
    return userUuid;
  }

  public void setUserUuid(@javax.annotation.Nullable UUID userUuid) {
    this.userUuid = userUuid;
  }


  public AuditTrailDTO mailboxUuid(@javax.annotation.Nullable UUID mailboxUuid) {
    this.mailboxUuid = mailboxUuid;
    return this;
  }

  /**
   * Get mailboxUuid
   * @return mailboxUuid
   */
  @javax.annotation.Nullable
  public UUID getMailboxUuid() {
    return mailboxUuid;
  }

  public void setMailboxUuid(@javax.annotation.Nullable UUID mailboxUuid) {
    this.mailboxUuid = mailboxUuid;
  }


  public AuditTrailDTO mailboxName(@javax.annotation.Nullable String mailboxName) {
    this.mailboxName = mailboxName;
    return this;
  }

  /**
   * Get mailboxName
   * @return mailboxName
   */
  @javax.annotation.Nullable
  public String getMailboxName() {
    return mailboxName;
  }

  public void setMailboxName(@javax.annotation.Nullable String mailboxName) {
    this.mailboxName = mailboxName;
  }


  public AuditTrailDTO userFirstAndLastName(@javax.annotation.Nullable String userFirstAndLastName) {
    this.userFirstAndLastName = userFirstAndLastName;
    return this;
  }

  /**
   * Get userFirstAndLastName
   * @return userFirstAndLastName
   */
  @javax.annotation.Nullable
  public String getUserFirstAndLastName() {
    return userFirstAndLastName;
  }

  public void setUserFirstAndLastName(@javax.annotation.Nullable String userFirstAndLastName) {
    this.userFirstAndLastName = userFirstAndLastName;
  }


  public AuditTrailDTO operation(@javax.annotation.Nullable OperationEnum operation) {
    this.operation = operation;
    return this;
  }

  /**
   * Get operation
   * @return operation
   */
  @javax.annotation.Nullable
  public OperationEnum getOperation() {
    return operation;
  }

  public void setOperation(@javax.annotation.Nullable OperationEnum operation) {
    this.operation = operation;
  }


  public AuditTrailDTO ip(@javax.annotation.Nullable String ip) {
    this.ip = ip;
    return this;
  }

  /**
   * Get ip
   * @return ip
   */
  @javax.annotation.Nullable
  public String getIp() {
    return ip;
  }

  public void setIp(@javax.annotation.Nullable String ip) {
    this.ip = ip;
  }


  public AuditTrailDTO browser(@javax.annotation.Nullable String browser) {
    this.browser = browser;
    return this;
  }

  /**
   * Get browser
   * @return browser
   */
  @javax.annotation.Nullable
  public String getBrowser() {
    return browser;
  }

  public void setBrowser(@javax.annotation.Nullable String browser) {
    this.browser = browser;
  }


  public AuditTrailDTO os(@javax.annotation.Nullable String os) {
    this.os = os;
    return this;
  }

  /**
   * Get os
   * @return os
   */
  @javax.annotation.Nullable
  public String getOs() {
    return os;
  }

  public void setOs(@javax.annotation.Nullable String os) {
    this.os = os;
  }


  public AuditTrailDTO geolocation(@javax.annotation.Nullable GeolocationInfoDTO geolocation) {
    this.geolocation = geolocation;
    return this;
  }

  /**
   * Get geolocation
   * @return geolocation
   */
  @javax.annotation.Nullable
  public GeolocationInfoDTO getGeolocation() {
    return geolocation;
  }

  public void setGeolocation(@javax.annotation.Nullable GeolocationInfoDTO geolocation) {
    this.geolocation = geolocation;
  }


  public AuditTrailDTO description(@javax.annotation.Nullable String description) {
    this.description = description;
    return this;
  }

  /**
   * Get description
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(@javax.annotation.Nullable String description) {
    this.description = description;
  }


  public AuditTrailDTO latitude(@javax.annotation.Nullable Float latitude) {
    this.latitude = latitude;
    return this;
  }

  /**
   * Get latitude
   * @return latitude
   */
  @javax.annotation.Nullable
  public Float getLatitude() {
    return latitude;
  }

  public void setLatitude(@javax.annotation.Nullable Float latitude) {
    this.latitude = latitude;
  }


  public AuditTrailDTO longitude(@javax.annotation.Nullable Float longitude) {
    this.longitude = longitude;
    return this;
  }

  /**
   * Get longitude
   * @return longitude
   */
  @javax.annotation.Nullable
  public Float getLongitude() {
    return longitude;
  }

  public void setLongitude(@javax.annotation.Nullable Float longitude) {
    this.longitude = longitude;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AuditTrailDTO auditTrailDTO = (AuditTrailDTO) o;
    return Objects.equals(this.envelopeUuid, auditTrailDTO.envelopeUuid) &&
        Objects.equals(this.dateTime, auditTrailDTO.dateTime) &&
        Objects.equals(this.userUuid, auditTrailDTO.userUuid) &&
        Objects.equals(this.mailboxUuid, auditTrailDTO.mailboxUuid) &&
        Objects.equals(this.mailboxName, auditTrailDTO.mailboxName) &&
        Objects.equals(this.userFirstAndLastName, auditTrailDTO.userFirstAndLastName) &&
        Objects.equals(this.operation, auditTrailDTO.operation) &&
        Objects.equals(this.ip, auditTrailDTO.ip) &&
        Objects.equals(this.browser, auditTrailDTO.browser) &&
        Objects.equals(this.os, auditTrailDTO.os) &&
        Objects.equals(this.geolocation, auditTrailDTO.geolocation) &&
        Objects.equals(this.description, auditTrailDTO.description) &&
        Objects.equals(this.latitude, auditTrailDTO.latitude) &&
        Objects.equals(this.longitude, auditTrailDTO.longitude);
  }

  @Override
  public int hashCode() {
    return Objects.hash(envelopeUuid, dateTime, userUuid, mailboxUuid, mailboxName, userFirstAndLastName, operation, ip, browser, os, geolocation, description, latitude, longitude);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AuditTrailDTO {\n");
    sb.append("    envelopeUuid: ").append(toIndentedString(envelopeUuid)).append("\n");
    sb.append("    dateTime: ").append(toIndentedString(dateTime)).append("\n");
    sb.append("    userUuid: ").append(toIndentedString(userUuid)).append("\n");
    sb.append("    mailboxUuid: ").append(toIndentedString(mailboxUuid)).append("\n");
    sb.append("    mailboxName: ").append(toIndentedString(mailboxName)).append("\n");
    sb.append("    userFirstAndLastName: ").append(toIndentedString(userFirstAndLastName)).append("\n");
    sb.append("    operation: ").append(toIndentedString(operation)).append("\n");
    sb.append("    ip: ").append(toIndentedString(ip)).append("\n");
    sb.append("    browser: ").append(toIndentedString(browser)).append("\n");
    sb.append("    os: ").append(toIndentedString(os)).append("\n");
    sb.append("    geolocation: ").append(toIndentedString(geolocation)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    latitude: ").append(toIndentedString(latitude)).append("\n");
    sb.append("    longitude: ").append(toIndentedString(longitude)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("envelopeUuid");
    openapiFields.add("dateTime");
    openapiFields.add("userUuid");
    openapiFields.add("mailboxUuid");
    openapiFields.add("mailboxName");
    openapiFields.add("userFirstAndLastName");
    openapiFields.add("operation");
    openapiFields.add("ip");
    openapiFields.add("browser");
    openapiFields.add("os");
    openapiFields.add("geolocation");
    openapiFields.add("description");
    openapiFields.add("latitude");
    openapiFields.add("longitude");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AuditTrailDTO
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AuditTrailDTO.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AuditTrailDTO is not found in the empty JSON string", AuditTrailDTO.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AuditTrailDTO.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AuditTrailDTO` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("envelopeUuid") != null && !jsonObj.get("envelopeUuid").isJsonNull()) && !jsonObj.get("envelopeUuid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `envelopeUuid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("envelopeUuid").toString()));
      }
      if ((jsonObj.get("userUuid") != null && !jsonObj.get("userUuid").isJsonNull()) && !jsonObj.get("userUuid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `userUuid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("userUuid").toString()));
      }
      if ((jsonObj.get("mailboxUuid") != null && !jsonObj.get("mailboxUuid").isJsonNull()) && !jsonObj.get("mailboxUuid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `mailboxUuid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("mailboxUuid").toString()));
      }
      if ((jsonObj.get("mailboxName") != null && !jsonObj.get("mailboxName").isJsonNull()) && !jsonObj.get("mailboxName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `mailboxName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("mailboxName").toString()));
      }
      if ((jsonObj.get("userFirstAndLastName") != null && !jsonObj.get("userFirstAndLastName").isJsonNull()) && !jsonObj.get("userFirstAndLastName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `userFirstAndLastName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("userFirstAndLastName").toString()));
      }
      if ((jsonObj.get("operation") != null && !jsonObj.get("operation").isJsonNull()) && !jsonObj.get("operation").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `operation` to be a primitive type in the JSON string but got `%s`", jsonObj.get("operation").toString()));
      }
      // validate the optional field `operation`
      if (jsonObj.get("operation") != null && !jsonObj.get("operation").isJsonNull()) {
        OperationEnum.validateJsonElement(jsonObj.get("operation"));
      }
      if ((jsonObj.get("ip") != null && !jsonObj.get("ip").isJsonNull()) && !jsonObj.get("ip").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ip` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ip").toString()));
      }
      if ((jsonObj.get("browser") != null && !jsonObj.get("browser").isJsonNull()) && !jsonObj.get("browser").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `browser` to be a primitive type in the JSON string but got `%s`", jsonObj.get("browser").toString()));
      }
      if ((jsonObj.get("os") != null && !jsonObj.get("os").isJsonNull()) && !jsonObj.get("os").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `os` to be a primitive type in the JSON string but got `%s`", jsonObj.get("os").toString()));
      }
      // validate the optional field `geolocation`
      if (jsonObj.get("geolocation") != null && !jsonObj.get("geolocation").isJsonNull()) {
        GeolocationInfoDTO.validateJsonElement(jsonObj.get("geolocation"));
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AuditTrailDTO.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AuditTrailDTO' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AuditTrailDTO> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AuditTrailDTO.class));

       return (TypeAdapter<T>) new TypeAdapter<AuditTrailDTO>() {
           @Override
           public void write(JsonWriter out, AuditTrailDTO value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AuditTrailDTO read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AuditTrailDTO given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AuditTrailDTO
   * @throws IOException if the JSON string is invalid with respect to AuditTrailDTO
   */
  public static AuditTrailDTO fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AuditTrailDTO.class);
  }

  /**
   * Convert an instance of AuditTrailDTO to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

