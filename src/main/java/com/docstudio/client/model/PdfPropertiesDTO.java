/*
 * DocStudio Api Documentation
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: R120.9
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.docstudio.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * PDF properties
 */
@Schema(description = "PDF properties")
@jakarta.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-12-12T19:25:03.673810363Z[GMT]")

public class PdfPropertiesDTO {
  @SerializedName("minSupportedWidth")
  private String minSupportedWidth = null;

  @SerializedName("minSupportedHeight")
  private String minSupportedHeight = null;

  @SerializedName("stampWidth")
  private String stampWidth = null;

  @SerializedName("stampHeight")
  private String stampHeight = null;

  @SerializedName("supportedConversionExtensions")
  private List<String> supportedConversionExtensions = null;

  public PdfPropertiesDTO minSupportedWidth(String minSupportedWidth) {
    this.minSupportedWidth = minSupportedWidth;
    return this;
  }

   /**
   * Get minSupportedWidth
   * @return minSupportedWidth
  **/
  @Schema(description = "")
  public String getMinSupportedWidth() {
    return minSupportedWidth;
  }

  public void setMinSupportedWidth(String minSupportedWidth) {
    this.minSupportedWidth = minSupportedWidth;
  }

  public PdfPropertiesDTO minSupportedHeight(String minSupportedHeight) {
    this.minSupportedHeight = minSupportedHeight;
    return this;
  }

   /**
   * Get minSupportedHeight
   * @return minSupportedHeight
  **/
  @Schema(description = "")
  public String getMinSupportedHeight() {
    return minSupportedHeight;
  }

  public void setMinSupportedHeight(String minSupportedHeight) {
    this.minSupportedHeight = minSupportedHeight;
  }

  public PdfPropertiesDTO stampWidth(String stampWidth) {
    this.stampWidth = stampWidth;
    return this;
  }

   /**
   * Get stampWidth
   * @return stampWidth
  **/
  @Schema(description = "")
  public String getStampWidth() {
    return stampWidth;
  }

  public void setStampWidth(String stampWidth) {
    this.stampWidth = stampWidth;
  }

  public PdfPropertiesDTO stampHeight(String stampHeight) {
    this.stampHeight = stampHeight;
    return this;
  }

   /**
   * Get stampHeight
   * @return stampHeight
  **/
  @Schema(description = "")
  public String getStampHeight() {
    return stampHeight;
  }

  public void setStampHeight(String stampHeight) {
    this.stampHeight = stampHeight;
  }

  public PdfPropertiesDTO supportedConversionExtensions(List<String> supportedConversionExtensions) {
    this.supportedConversionExtensions = supportedConversionExtensions;
    return this;
  }

  public PdfPropertiesDTO addSupportedConversionExtensionsItem(String supportedConversionExtensionsItem) {
    if (this.supportedConversionExtensions == null) {
      this.supportedConversionExtensions = new ArrayList<String>();
    }
    this.supportedConversionExtensions.add(supportedConversionExtensionsItem);
    return this;
  }

   /**
   * Get supportedConversionExtensions
   * @return supportedConversionExtensions
  **/
  @Schema(description = "")
  public List<String> getSupportedConversionExtensions() {
    return supportedConversionExtensions;
  }

  public void setSupportedConversionExtensions(List<String> supportedConversionExtensions) {
    this.supportedConversionExtensions = supportedConversionExtensions;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PdfPropertiesDTO pdfPropertiesDTO = (PdfPropertiesDTO) o;
    return Objects.equals(this.minSupportedWidth, pdfPropertiesDTO.minSupportedWidth) &&
        Objects.equals(this.minSupportedHeight, pdfPropertiesDTO.minSupportedHeight) &&
        Objects.equals(this.stampWidth, pdfPropertiesDTO.stampWidth) &&
        Objects.equals(this.stampHeight, pdfPropertiesDTO.stampHeight) &&
        Objects.equals(this.supportedConversionExtensions, pdfPropertiesDTO.supportedConversionExtensions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(minSupportedWidth, minSupportedHeight, stampWidth, stampHeight, supportedConversionExtensions);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PdfPropertiesDTO {\n");
    
    sb.append("    minSupportedWidth: ").append(toIndentedString(minSupportedWidth)).append("\n");
    sb.append("    minSupportedHeight: ").append(toIndentedString(minSupportedHeight)).append("\n");
    sb.append("    stampWidth: ").append(toIndentedString(stampWidth)).append("\n");
    sb.append("    stampHeight: ").append(toIndentedString(stampHeight)).append("\n");
    sb.append("    supportedConversionExtensions: ").append(toIndentedString(supportedConversionExtensions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
