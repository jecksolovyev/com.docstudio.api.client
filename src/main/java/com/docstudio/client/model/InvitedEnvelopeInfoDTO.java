/*
 * DocStudio Api Documentation
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: R75.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.docstudio.client.model;

import java.util.Objects;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;

import java.util.ArrayList;
import java.util.List;
import org.threeten.bp.OffsetDateTime;
/**
 * InvitedEnvelopeInfoDTO
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-03-14T13:27:59.020080107Z[GMT]")
public class InvitedEnvelopeInfoDTO {
  @SerializedName("message")
  private String message = null;

  @SerializedName("subject")
  private String subject = null;

  @SerializedName("expireAfter")
  private OffsetDateTime expireAfter = null;

  @SerializedName("createdAt")
  private OffsetDateTime createdAt = null;

  @SerializedName("sender")
  private EnvelopeSenderDTO sender = null;

  @SerializedName("templateName")
  private String templateName = null;

  @SerializedName("total")
  private Integer total = null;

  @SerializedName("completed")
  private Integer completed = null;

  @SerializedName("flow")
  private List<EnvelopeFlowInfoDTO> flow = null;

  public InvitedEnvelopeInfoDTO message(String message) {
    this.message = message;
    return this;
  }

   /**
   * Envelope message
   * @return message
  **/
  @Schema(description = "Envelope message")
  public String getMessage() {
    return message;
  }

  public void setMessage(String message) {
    this.message = message;
  }

  public InvitedEnvelopeInfoDTO subject(String subject) {
    this.subject = subject;
    return this;
  }

   /**
   * Envelope subject
   * @return subject
  **/
  @Schema(description = "Envelope subject")
  public String getSubject() {
    return subject;
  }

  public void setSubject(String subject) {
    this.subject = subject;
  }

  public InvitedEnvelopeInfoDTO expireAfter(OffsetDateTime expireAfter) {
    this.expireAfter = expireAfter;
    return this;
  }

   /**
   * Envelope expiration date
   * @return expireAfter
  **/
  @Schema(description = "Envelope expiration date")
  public OffsetDateTime getExpireAfter() {
    return expireAfter;
  }

  public void setExpireAfter(OffsetDateTime expireAfter) {
    this.expireAfter = expireAfter;
  }

  public InvitedEnvelopeInfoDTO createdAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Envelope creation date
   * @return createdAt
  **/
  @Schema(description = "Envelope creation date")
  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }

  public InvitedEnvelopeInfoDTO sender(EnvelopeSenderDTO sender) {
    this.sender = sender;
    return this;
  }

   /**
   * Get sender
   * @return sender
  **/
  @Schema(description = "")
  public EnvelopeSenderDTO getSender() {
    return sender;
  }

  public void setSender(EnvelopeSenderDTO sender) {
    this.sender = sender;
  }

  public InvitedEnvelopeInfoDTO templateName(String templateName) {
    this.templateName = templateName;
    return this;
  }

   /**
   * Name of the template of this envelope
   * @return templateName
  **/
  @Schema(description = "Name of the template of this envelope")
  public String getTemplateName() {
    return templateName;
  }

  public void setTemplateName(String templateName) {
    this.templateName = templateName;
  }

  public InvitedEnvelopeInfoDTO total(Integer total) {
    this.total = total;
    return this;
  }

   /**
   * Total number of roles assigned for processing of this envelope
   * @return total
  **/
  @Schema(description = "Total number of roles assigned for processing of this envelope")
  public Integer getTotal() {
    return total;
  }

  public void setTotal(Integer total) {
    this.total = total;
  }

  public InvitedEnvelopeInfoDTO completed(Integer completed) {
    this.completed = completed;
    return this;
  }

   /**
   * Number of roles completed processing of this envelope
   * @return completed
  **/
  @Schema(description = "Number of roles completed processing of this envelope")
  public Integer getCompleted() {
    return completed;
  }

  public void setCompleted(Integer completed) {
    this.completed = completed;
  }

  public InvitedEnvelopeInfoDTO flow(List<EnvelopeFlowInfoDTO> flow) {
    this.flow = flow;
    return this;
  }

  public InvitedEnvelopeInfoDTO addFlowItem(EnvelopeFlowInfoDTO flowItem) {
    if (this.flow == null) {
      this.flow = new ArrayList<EnvelopeFlowInfoDTO>();
    }
    this.flow.add(flowItem);
    return this;
  }

   /**
   * Detailed information about every role
   * @return flow
  **/
  @Schema(description = "Detailed information about every role")
  public List<EnvelopeFlowInfoDTO> getFlow() {
    return flow;
  }

  public void setFlow(List<EnvelopeFlowInfoDTO> flow) {
    this.flow = flow;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InvitedEnvelopeInfoDTO invitedEnvelopeInfoDTO = (InvitedEnvelopeInfoDTO) o;
    return Objects.equals(this.message, invitedEnvelopeInfoDTO.message) &&
        Objects.equals(this.subject, invitedEnvelopeInfoDTO.subject) &&
        Objects.equals(this.expireAfter, invitedEnvelopeInfoDTO.expireAfter) &&
        Objects.equals(this.createdAt, invitedEnvelopeInfoDTO.createdAt) &&
        Objects.equals(this.sender, invitedEnvelopeInfoDTO.sender) &&
        Objects.equals(this.templateName, invitedEnvelopeInfoDTO.templateName) &&
        Objects.equals(this.total, invitedEnvelopeInfoDTO.total) &&
        Objects.equals(this.completed, invitedEnvelopeInfoDTO.completed) &&
        Objects.equals(this.flow, invitedEnvelopeInfoDTO.flow);
  }

  @Override
  public int hashCode() {
    return Objects.hash(message, subject, expireAfter, createdAt, sender, templateName, total, completed, flow);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InvitedEnvelopeInfoDTO {\n");
    
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("    subject: ").append(toIndentedString(subject)).append("\n");
    sb.append("    expireAfter: ").append(toIndentedString(expireAfter)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    sender: ").append(toIndentedString(sender)).append("\n");
    sb.append("    templateName: ").append(toIndentedString(templateName)).append("\n");
    sb.append("    total: ").append(toIndentedString(total)).append("\n");
    sb.append("    completed: ").append(toIndentedString(completed)).append("\n");
    sb.append("    flow: ").append(toIndentedString(flow)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
