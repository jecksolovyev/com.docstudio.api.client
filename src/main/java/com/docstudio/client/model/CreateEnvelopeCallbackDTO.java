/*
 * DocStudio Api Documentation
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: R82.8
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.docstudio.client.model;

import java.util.Objects;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;

/**
 * Create envelope callback dto
 */
@Schema(description = "Create envelope callback dto")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-06-19T23:56:47.469723923Z[GMT]")

public class CreateEnvelopeCallbackDTO {
  @SerializedName("filter")
  private CallbackEnvelopeFilterDTO filter = null;

  @SerializedName("url")
  private String url = null;

  @SerializedName("retries")
  private Integer retries = null;

  @SerializedName("timeout")
  private Integer timeout = null;

  @SerializedName("successCode")
  private Integer successCode = 200;

  @SerializedName("login")
  private String login = null;

  @SerializedName("password")
  private String password = null;

  public CreateEnvelopeCallbackDTO filter(CallbackEnvelopeFilterDTO filter) {
    this.filter = filter;
    return this;
  }

   /**
   * Get filter
   * @return filter
  **/
  @Schema(required = true, description = "")
  public CallbackEnvelopeFilterDTO getFilter() {
    return filter;
  }

  public void setFilter(CallbackEnvelopeFilterDTO filter) {
    this.filter = filter;
  }

  public CreateEnvelopeCallbackDTO url(String url) {
    this.url = url;
    return this;
  }

   /**
   * Callback url
   * @return url
  **/
  @Schema(required = true, description = "Callback url")
  public String getUrl() {
    return url;
  }

  public void setUrl(String url) {
    this.url = url;
  }

  public CreateEnvelopeCallbackDTO retries(Integer retries) {
    this.retries = retries;
    return this;
  }

   /**
   * Retries count, 0 &lt; X &lt;&#x3D; 10
   * minimum: 0
   * maximum: 10
   * @return retries
  **/
  @Schema(required = true, description = "Retries count, 0 < X <= 10")
  public Integer getRetries() {
    return retries;
  }

  public void setRetries(Integer retries) {
    this.retries = retries;
  }

  public CreateEnvelopeCallbackDTO timeout(Integer timeout) {
    this.timeout = timeout;
    return this;
  }

   /**
   * Request timeout (ms), 100 &lt; X &lt; 60000
   * minimum: 100
   * maximum: 60000
   * @return timeout
  **/
  @Schema(required = true, description = "Request timeout (ms), 100 < X < 60000")
  public Integer getTimeout() {
    return timeout;
  }

  public void setTimeout(Integer timeout) {
    this.timeout = timeout;
  }

  public CreateEnvelopeCallbackDTO successCode(Integer successCode) {
    this.successCode = successCode;
    return this;
  }

   /**
   * Http response success code
   * @return successCode
  **/
  @Schema(description = "Http response success code")
  public Integer getSuccessCode() {
    return successCode;
  }

  public void setSuccessCode(Integer successCode) {
    this.successCode = successCode;
  }

  public CreateEnvelopeCallbackDTO login(String login) {
    this.login = login;
    return this;
  }

   /**
   * Basic auth login
   * @return login
  **/
  @Schema(description = "Basic auth login")
  public String getLogin() {
    return login;
  }

  public void setLogin(String login) {
    this.login = login;
  }

  public CreateEnvelopeCallbackDTO password(String password) {
    this.password = password;
    return this;
  }

   /**
   * Basic auth password
   * @return password
  **/
  @Schema(description = "Basic auth password")
  public String getPassword() {
    return password;
  }

  public void setPassword(String password) {
    this.password = password;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateEnvelopeCallbackDTO createEnvelopeCallbackDTO = (CreateEnvelopeCallbackDTO) o;
    return Objects.equals(this.filter, createEnvelopeCallbackDTO.filter) &&
        Objects.equals(this.url, createEnvelopeCallbackDTO.url) &&
        Objects.equals(this.retries, createEnvelopeCallbackDTO.retries) &&
        Objects.equals(this.timeout, createEnvelopeCallbackDTO.timeout) &&
        Objects.equals(this.successCode, createEnvelopeCallbackDTO.successCode) &&
        Objects.equals(this.login, createEnvelopeCallbackDTO.login) &&
        Objects.equals(this.password, createEnvelopeCallbackDTO.password);
  }

  @Override
  public int hashCode() {
    return Objects.hash(filter, url, retries, timeout, successCode, login, password);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateEnvelopeCallbackDTO {\n");
    
    sb.append("    filter: ").append(toIndentedString(filter)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    retries: ").append(toIndentedString(retries)).append("\n");
    sb.append("    timeout: ").append(toIndentedString(timeout)).append("\n");
    sb.append("    successCode: ").append(toIndentedString(successCode)).append("\n");
    sb.append("    login: ").append(toIndentedString(login)).append("\n");
    sb.append("    password: ").append(toIndentedString(password)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
