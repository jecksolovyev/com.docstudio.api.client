/*
 * DocStudio Api Documentation
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: R120.9
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.docstudio.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.UUID;
/**
 * EnvelopeListColumn
 */

@jakarta.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-12-12T19:25:03.673810363Z[GMT]")

public class EnvelopeListColumn {
  @SerializedName("uuid")
  private UUID uuid = null;

  @SerializedName("visible")
  private Boolean visible = null;

  @SerializedName("hideable")
  private Boolean hideable = null;

  @SerializedName("minWidth")
  private Integer minWidth = null;

  @SerializedName("defaultWidth")
  private Integer defaultWidth = null;

  public EnvelopeListColumn uuid(UUID uuid) {
    this.uuid = uuid;
    return this;
  }

   /**
   * Get uuid
   * @return uuid
  **/
  @Schema(description = "")
  public UUID getUuid() {
    return uuid;
  }

  public void setUuid(UUID uuid) {
    this.uuid = uuid;
  }

  public EnvelopeListColumn visible(Boolean visible) {
    this.visible = visible;
    return this;
  }

   /**
   * Get visible
   * @return visible
  **/
  @Schema(description = "")
  public Boolean isVisible() {
    return visible;
  }

  public void setVisible(Boolean visible) {
    this.visible = visible;
  }

  public EnvelopeListColumn hideable(Boolean hideable) {
    this.hideable = hideable;
    return this;
  }

   /**
   * Get hideable
   * @return hideable
  **/
  @Schema(description = "")
  public Boolean isHideable() {
    return hideable;
  }

  public void setHideable(Boolean hideable) {
    this.hideable = hideable;
  }

  public EnvelopeListColumn minWidth(Integer minWidth) {
    this.minWidth = minWidth;
    return this;
  }

   /**
   * Get minWidth
   * @return minWidth
  **/
  @Schema(description = "")
  public Integer getMinWidth() {
    return minWidth;
  }

  public void setMinWidth(Integer minWidth) {
    this.minWidth = minWidth;
  }

  public EnvelopeListColumn defaultWidth(Integer defaultWidth) {
    this.defaultWidth = defaultWidth;
    return this;
  }

   /**
   * Get defaultWidth
   * @return defaultWidth
  **/
  @Schema(description = "")
  public Integer getDefaultWidth() {
    return defaultWidth;
  }

  public void setDefaultWidth(Integer defaultWidth) {
    this.defaultWidth = defaultWidth;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EnvelopeListColumn envelopeListColumn = (EnvelopeListColumn) o;
    return Objects.equals(this.uuid, envelopeListColumn.uuid) &&
        Objects.equals(this.visible, envelopeListColumn.visible) &&
        Objects.equals(this.hideable, envelopeListColumn.hideable) &&
        Objects.equals(this.minWidth, envelopeListColumn.minWidth) &&
        Objects.equals(this.defaultWidth, envelopeListColumn.defaultWidth);
  }

  @Override
  public int hashCode() {
    return Objects.hash(uuid, visible, hideable, minWidth, defaultWidth);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EnvelopeListColumn {\n");
    
    sb.append("    uuid: ").append(toIndentedString(uuid)).append("\n");
    sb.append("    visible: ").append(toIndentedString(visible)).append("\n");
    sb.append("    hideable: ").append(toIndentedString(hideable)).append("\n");
    sb.append("    minWidth: ").append(toIndentedString(minWidth)).append("\n");
    sb.append("    defaultWidth: ").append(toIndentedString(defaultWidth)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
