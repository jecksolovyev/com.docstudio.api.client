/*
 * DocStudio Api Documentation
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: R120.9
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.docstudio.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
/**
 * E-mails for support
 */
@Schema(description = "E-mails for support")
@jakarta.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-12-12T19:25:03.673810363Z[GMT]")

public class EmailProperties {
  @SerializedName("salesSupportEmail")
  private String salesSupportEmail = null;

  @SerializedName("helpCenterTitleKey")
  private String helpCenterTitleKey = null;

  @SerializedName("addressTitleKey")
  private String addressTitleKey = null;

  @SerializedName("contacts")
  private Map<String, List<String>> contacts = null;

  public EmailProperties salesSupportEmail(String salesSupportEmail) {
    this.salesSupportEmail = salesSupportEmail;
    return this;
  }

   /**
   * Get salesSupportEmail
   * @return salesSupportEmail
  **/
  @Schema(description = "")
  public String getSalesSupportEmail() {
    return salesSupportEmail;
  }

  public void setSalesSupportEmail(String salesSupportEmail) {
    this.salesSupportEmail = salesSupportEmail;
  }

  public EmailProperties helpCenterTitleKey(String helpCenterTitleKey) {
    this.helpCenterTitleKey = helpCenterTitleKey;
    return this;
  }

   /**
   * Get helpCenterTitleKey
   * @return helpCenterTitleKey
  **/
  @Schema(description = "")
  public String getHelpCenterTitleKey() {
    return helpCenterTitleKey;
  }

  public void setHelpCenterTitleKey(String helpCenterTitleKey) {
    this.helpCenterTitleKey = helpCenterTitleKey;
  }

  public EmailProperties addressTitleKey(String addressTitleKey) {
    this.addressTitleKey = addressTitleKey;
    return this;
  }

   /**
   * Get addressTitleKey
   * @return addressTitleKey
  **/
  @Schema(description = "")
  public String getAddressTitleKey() {
    return addressTitleKey;
  }

  public void setAddressTitleKey(String addressTitleKey) {
    this.addressTitleKey = addressTitleKey;
  }

  public EmailProperties contacts(Map<String, List<String>> contacts) {
    this.contacts = contacts;
    return this;
  }

  public EmailProperties putContactsItem(String key, List<String> contactsItem) {
    if (this.contacts == null) {
      this.contacts = new HashMap<String, List<String>>();
    }
    this.contacts.put(key, contactsItem);
    return this;
  }

   /**
   * Get contacts
   * @return contacts
  **/
  @Schema(description = "")
  public Map<String, List<String>> getContacts() {
    return contacts;
  }

  public void setContacts(Map<String, List<String>> contacts) {
    this.contacts = contacts;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EmailProperties emailProperties = (EmailProperties) o;
    return Objects.equals(this.salesSupportEmail, emailProperties.salesSupportEmail) &&
        Objects.equals(this.helpCenterTitleKey, emailProperties.helpCenterTitleKey) &&
        Objects.equals(this.addressTitleKey, emailProperties.addressTitleKey) &&
        Objects.equals(this.contacts, emailProperties.contacts);
  }

  @Override
  public int hashCode() {
    return Objects.hash(salesSupportEmail, helpCenterTitleKey, addressTitleKey, contacts);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EmailProperties {\n");
    
    sb.append("    salesSupportEmail: ").append(toIndentedString(salesSupportEmail)).append("\n");
    sb.append("    helpCenterTitleKey: ").append(toIndentedString(helpCenterTitleKey)).append("\n");
    sb.append("    addressTitleKey: ").append(toIndentedString(addressTitleKey)).append("\n");
    sb.append("    contacts: ").append(toIndentedString(contacts)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
