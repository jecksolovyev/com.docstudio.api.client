/*
 * DocStudio Api Documentation
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: R86.31
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.docstudio.client.model;

import java.util.Objects;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;

import java.util.ArrayList;
import java.util.List;
import java.util.UUID;
import org.threeten.bp.OffsetDateTime;
/**
 * AccountDTO
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2023-08-14T22:02:04.375144579Z[GMT]")

public class AccountDTO {
  @SerializedName("uuid")
  private UUID uuid = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("inn")
  private String inn = null;

  @SerializedName("createdAt")
  private OffsetDateTime createdAt = null;

  @SerializedName("modifiedAt")
  private OffsetDateTime modifiedAt = null;

  @SerializedName("mailboxes")
  private List<MailboxSimpleDTO> mailboxes = null;

  @SerializedName("users")
  private List<AccountUserDTO> users = null;

  @SerializedName("logo")
  private String logo = null;

  @SerializedName("brand")
  private String brand = null;

  @SerializedName("currency")
  private String currency = null;

  @SerializedName("timezone")
  private String timezone = null;

  @SerializedName("createPersonalMailbox")
  private Boolean createPersonalMailbox = null;

  public AccountDTO uuid(UUID uuid) {
    this.uuid = uuid;
    return this;
  }

   /**
   * Account UUID
   * @return uuid
  **/
  @Schema(description = "Account UUID")
  public UUID getUuid() {
    return uuid;
  }

  public void setUuid(UUID uuid) {
    this.uuid = uuid;
  }

  public AccountDTO name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Account Name
   * @return name
  **/
  @Schema(required = true, description = "Account Name")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public AccountDTO inn(String inn) {
    this.inn = inn;
    return this;
  }

   /**
   * Account TAX number
   * @return inn
  **/
  @Schema(description = "Account TAX number")
  public String getInn() {
    return inn;
  }

  public void setInn(String inn) {
    this.inn = inn;
  }

  public AccountDTO createdAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Account creation date
   * @return createdAt
  **/
  @Schema(description = "Account creation date")
  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }

  public AccountDTO modifiedAt(OffsetDateTime modifiedAt) {
    this.modifiedAt = modifiedAt;
    return this;
  }

   /**
   * Account last modification date
   * @return modifiedAt
  **/
  @Schema(description = "Account last modification date")
  public OffsetDateTime getModifiedAt() {
    return modifiedAt;
  }

  public void setModifiedAt(OffsetDateTime modifiedAt) {
    this.modifiedAt = modifiedAt;
  }

  public AccountDTO mailboxes(List<MailboxSimpleDTO> mailboxes) {
    this.mailboxes = mailboxes;
    return this;
  }

  public AccountDTO addMailboxesItem(MailboxSimpleDTO mailboxesItem) {
    if (this.mailboxes == null) {
      this.mailboxes = new ArrayList<MailboxSimpleDTO>();
    }
    this.mailboxes.add(mailboxesItem);
    return this;
  }

   /**
   * Get mailboxes
   * @return mailboxes
  **/
  @Schema(description = "")
  public List<MailboxSimpleDTO> getMailboxes() {
    return mailboxes;
  }

  public void setMailboxes(List<MailboxSimpleDTO> mailboxes) {
    this.mailboxes = mailboxes;
  }

  public AccountDTO users(List<AccountUserDTO> users) {
    this.users = users;
    return this;
  }

  public AccountDTO addUsersItem(AccountUserDTO usersItem) {
    if (this.users == null) {
      this.users = new ArrayList<AccountUserDTO>();
    }
    this.users.add(usersItem);
    return this;
  }

   /**
   * Get users
   * @return users
  **/
  @Schema(description = "")
  public List<AccountUserDTO> getUsers() {
    return users;
  }

  public void setUsers(List<AccountUserDTO> users) {
    this.users = users;
  }

  public AccountDTO logo(String logo) {
    this.logo = logo;
    return this;
  }

   /**
   * Account logo in base64 format (svg, png, jpeg)
   * @return logo
  **/
  @Schema(description = "Account logo in base64 format (svg, png, jpeg)")
  public String getLogo() {
    return logo;
  }

  public void setLogo(String logo) {
    this.logo = logo;
  }

  public AccountDTO brand(String brand) {
    this.brand = brand;
    return this;
  }

   /**
   * Account brand logo in base64 format (svg, png, jpeg)
   * @return brand
  **/
  @Schema(description = "Account brand logo in base64 format (svg, png, jpeg)")
  public String getBrand() {
    return brand;
  }

  public void setBrand(String brand) {
    this.brand = brand;
  }

  public AccountDTO currency(String currency) {
    this.currency = currency;
    return this;
  }

   /**
   * Account currency for billing purposes
   * @return currency
  **/
  @Schema(description = "Account currency for billing purposes")
  public String getCurrency() {
    return currency;
  }

  public void setCurrency(String currency) {
    this.currency = currency;
  }

  public AccountDTO timezone(String timezone) {
    this.timezone = timezone;
    return this;
  }

   /**
   * Account timezone for billing purposes
   * @return timezone
  **/
  @Schema(description = "Account timezone for billing purposes")
  public String getTimezone() {
    return timezone;
  }

  public void setTimezone(String timezone) {
    this.timezone = timezone;
  }

  public AccountDTO createPersonalMailbox(Boolean createPersonalMailbox) {
    this.createPersonalMailbox = createPersonalMailbox;
    return this;
  }

   /**
   * Create personal mailbox for self-registered corporate user
   * @return createPersonalMailbox
  **/
  @Schema(description = "Create personal mailbox for self-registered corporate user")
  public Boolean isCreatePersonalMailbox() {
    return createPersonalMailbox;
  }

  public void setCreatePersonalMailbox(Boolean createPersonalMailbox) {
    this.createPersonalMailbox = createPersonalMailbox;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AccountDTO accountDTO = (AccountDTO) o;
    return Objects.equals(this.uuid, accountDTO.uuid) &&
        Objects.equals(this.name, accountDTO.name) &&
        Objects.equals(this.inn, accountDTO.inn) &&
        Objects.equals(this.createdAt, accountDTO.createdAt) &&
        Objects.equals(this.modifiedAt, accountDTO.modifiedAt) &&
        Objects.equals(this.mailboxes, accountDTO.mailboxes) &&
        Objects.equals(this.users, accountDTO.users) &&
        Objects.equals(this.logo, accountDTO.logo) &&
        Objects.equals(this.brand, accountDTO.brand) &&
        Objects.equals(this.currency, accountDTO.currency) &&
        Objects.equals(this.timezone, accountDTO.timezone) &&
        Objects.equals(this.createPersonalMailbox, accountDTO.createPersonalMailbox);
  }

  @Override
  public int hashCode() {
    return Objects.hash(uuid, name, inn, createdAt, modifiedAt, mailboxes, users, logo, brand, currency, timezone, createPersonalMailbox);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AccountDTO {\n");
    
    sb.append("    uuid: ").append(toIndentedString(uuid)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    inn: ").append(toIndentedString(inn)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    modifiedAt: ").append(toIndentedString(modifiedAt)).append("\n");
    sb.append("    mailboxes: ").append(toIndentedString(mailboxes)).append("\n");
    sb.append("    users: ").append(toIndentedString(users)).append("\n");
    sb.append("    logo: ").append(toIndentedString(logo)).append("\n");
    sb.append("    brand: ").append(toIndentedString(brand)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    timezone: ").append(toIndentedString(timezone)).append("\n");
    sb.append("    createPersonalMailbox: ").append(toIndentedString(createPersonalMailbox)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
