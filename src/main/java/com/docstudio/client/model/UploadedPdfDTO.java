/*
 * DocStudio Api Documentation
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: R120.9
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.docstudio.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.UUID;
/**
 * UploadedPdfDTO
 */

@jakarta.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-12-12T19:25:03.673810363Z[GMT]")

public class UploadedPdfDTO {
  @SerializedName("uuid")
  private UUID uuid = null;

  @SerializedName("hash")
  private String hash = null;

  @SerializedName("fieldsXml")
  private String fieldsXml = null;

  @SerializedName("updatedPdf")
  private byte[] updatedPdf = null;

  public UploadedPdfDTO uuid(UUID uuid) {
    this.uuid = uuid;
    return this;
  }

   /**
   * PDF UUID
   * @return uuid
  **/
  @Schema(description = "PDF UUID")
  public UUID getUuid() {
    return uuid;
  }

  public void setUuid(UUID uuid) {
    this.uuid = uuid;
  }

  public UploadedPdfDTO hash(String hash) {
    this.hash = hash;
    return this;
  }

   /**
   * PDF hash
   * @return hash
  **/
  @Schema(description = "PDF hash")
  public String getHash() {
    return hash;
  }

  public void setHash(String hash) {
    this.hash = hash;
  }

  public UploadedPdfDTO fieldsXml(String fieldsXml) {
    this.fieldsXml = fieldsXml;
    return this;
  }

   /**
   * Found fields in XML formal
   * @return fieldsXml
  **/
  @Schema(description = "Found fields in XML formal")
  public String getFieldsXml() {
    return fieldsXml;
  }

  public void setFieldsXml(String fieldsXml) {
    this.fieldsXml = fieldsXml;
  }

  public UploadedPdfDTO updatedPdf(byte[] updatedPdf) {
    this.updatedPdf = updatedPdf;
    return this;
  }

   /**
   * Updated PDF
   * @return updatedPdf
  **/
  @Schema(description = "Updated PDF")
  public byte[] getUpdatedPdf() {
    return updatedPdf;
  }

  public void setUpdatedPdf(byte[] updatedPdf) {
    this.updatedPdf = updatedPdf;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UploadedPdfDTO uploadedPdfDTO = (UploadedPdfDTO) o;
    return Objects.equals(this.uuid, uploadedPdfDTO.uuid) &&
        Objects.equals(this.hash, uploadedPdfDTO.hash) &&
        Objects.equals(this.fieldsXml, uploadedPdfDTO.fieldsXml) &&
        Arrays.equals(this.updatedPdf, uploadedPdfDTO.updatedPdf);
  }

  @Override
  public int hashCode() {
    return Objects.hash(uuid, hash, fieldsXml, Arrays.hashCode(updatedPdf));
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UploadedPdfDTO {\n");
    
    sb.append("    uuid: ").append(toIndentedString(uuid)).append("\n");
    sb.append("    hash: ").append(toIndentedString(hash)).append("\n");
    sb.append("    fieldsXml: ").append(toIndentedString(fieldsXml)).append("\n");
    sb.append("    updatedPdf: ").append(toIndentedString(updatedPdf)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
