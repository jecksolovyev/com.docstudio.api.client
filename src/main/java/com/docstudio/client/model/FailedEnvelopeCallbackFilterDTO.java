/*
 * DocStudio Api Documentation
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: R120.9
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.docstudio.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;
import org.threeten.bp.OffsetDateTime;
/**
 * Envelope properties distinct with filter
 */
@Schema(description = "Envelope properties distinct with filter")
@jakarta.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-12-12T19:25:03.673810363Z[GMT]")

public class FailedEnvelopeCallbackFilterDTO {
  @SerializedName("labels")
  private List<UUID> labels = null;

  /**
   * Envelope status
   */
  @JsonAdapter(StatusEnum.Adapter.class)
  public enum StatusEnum {
    @SerializedName("DRAFT")
    DRAFT("DRAFT"),
    @SerializedName("SENT")
    SENT("SENT"),
    @SerializedName("WAITING")
    WAITING("WAITING"),
    @SerializedName("COMPLETED")
    COMPLETED("COMPLETED"),
    @SerializedName("CANCELLED")
    CANCELLED("CANCELLED"),
    @SerializedName("EXPIRED")
    EXPIRED("EXPIRED"),
    @SerializedName("ON_APPROVAL")
    ON_APPROVAL("ON_APPROVAL");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static StatusEnum fromValue(String input) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return StatusEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("status")
  private StatusEnum status = null;

  @SerializedName("subject")
  private String subject = null;

  @SerializedName("createDate")
  private OffsetDateTime createDate = null;

  @SerializedName("receiveDate")
  private OffsetDateTime receiveDate = null;

  @SerializedName("expireDate")
  private OffsetDateTime expireDate = null;

  @SerializedName("template")
  private UUID template = null;

  @SerializedName("sender")
  private UUID sender = null;

  public FailedEnvelopeCallbackFilterDTO labels(List<UUID> labels) {
    this.labels = labels;
    return this;
  }

  public FailedEnvelopeCallbackFilterDTO addLabelsItem(UUID labelsItem) {
    if (this.labels == null) {
      this.labels = new ArrayList<UUID>();
    }
    this.labels.add(labelsItem);
    return this;
  }

   /**
   * Get labels
   * @return labels
  **/
  @Schema(description = "")
  public List<UUID> getLabels() {
    return labels;
  }

  public void setLabels(List<UUID> labels) {
    this.labels = labels;
  }

  public FailedEnvelopeCallbackFilterDTO status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * Envelope status
   * @return status
  **/
  @Schema(description = "Envelope status")
  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(StatusEnum status) {
    this.status = status;
  }

  public FailedEnvelopeCallbackFilterDTO subject(String subject) {
    this.subject = subject;
    return this;
  }

   /**
   * Envelope subject
   * @return subject
  **/
  @Schema(description = "Envelope subject")
  public String getSubject() {
    return subject;
  }

  public void setSubject(String subject) {
    this.subject = subject;
  }

  public FailedEnvelopeCallbackFilterDTO createDate(OffsetDateTime createDate) {
    this.createDate = createDate;
    return this;
  }

   /**
   * Creation date
   * @return createDate
  **/
  @Schema(description = "Creation date")
  public OffsetDateTime getCreateDate() {
    return createDate;
  }

  public void setCreateDate(OffsetDateTime createDate) {
    this.createDate = createDate;
  }

  public FailedEnvelopeCallbackFilterDTO receiveDate(OffsetDateTime receiveDate) {
    this.receiveDate = receiveDate;
    return this;
  }

   /**
   * Receive date
   * @return receiveDate
  **/
  @Schema(description = "Receive date")
  public OffsetDateTime getReceiveDate() {
    return receiveDate;
  }

  public void setReceiveDate(OffsetDateTime receiveDate) {
    this.receiveDate = receiveDate;
  }

  public FailedEnvelopeCallbackFilterDTO expireDate(OffsetDateTime expireDate) {
    this.expireDate = expireDate;
    return this;
  }

   /**
   * Expire date
   * @return expireDate
  **/
  @Schema(description = "Expire date")
  public OffsetDateTime getExpireDate() {
    return expireDate;
  }

  public void setExpireDate(OffsetDateTime expireDate) {
    this.expireDate = expireDate;
  }

  public FailedEnvelopeCallbackFilterDTO template(UUID template) {
    this.template = template;
    return this;
  }

   /**
   * Template uuid
   * @return template
  **/
  @Schema(description = "Template uuid")
  public UUID getTemplate() {
    return template;
  }

  public void setTemplate(UUID template) {
    this.template = template;
  }

  public FailedEnvelopeCallbackFilterDTO sender(UUID sender) {
    this.sender = sender;
    return this;
  }

   /**
   * Envelope sender uuid
   * @return sender
  **/
  @Schema(description = "Envelope sender uuid")
  public UUID getSender() {
    return sender;
  }

  public void setSender(UUID sender) {
    this.sender = sender;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FailedEnvelopeCallbackFilterDTO failedEnvelopeCallbackFilterDTO = (FailedEnvelopeCallbackFilterDTO) o;
    return Objects.equals(this.labels, failedEnvelopeCallbackFilterDTO.labels) &&
        Objects.equals(this.status, failedEnvelopeCallbackFilterDTO.status) &&
        Objects.equals(this.subject, failedEnvelopeCallbackFilterDTO.subject) &&
        Objects.equals(this.createDate, failedEnvelopeCallbackFilterDTO.createDate) &&
        Objects.equals(this.receiveDate, failedEnvelopeCallbackFilterDTO.receiveDate) &&
        Objects.equals(this.expireDate, failedEnvelopeCallbackFilterDTO.expireDate) &&
        Objects.equals(this.template, failedEnvelopeCallbackFilterDTO.template) &&
        Objects.equals(this.sender, failedEnvelopeCallbackFilterDTO.sender);
  }

  @Override
  public int hashCode() {
    return Objects.hash(labels, status, subject, createDate, receiveDate, expireDate, template, sender);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FailedEnvelopeCallbackFilterDTO {\n");
    
    sb.append("    labels: ").append(toIndentedString(labels)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    subject: ").append(toIndentedString(subject)).append("\n");
    sb.append("    createDate: ").append(toIndentedString(createDate)).append("\n");
    sb.append("    receiveDate: ").append(toIndentedString(receiveDate)).append("\n");
    sb.append("    expireDate: ").append(toIndentedString(expireDate)).append("\n");
    sb.append("    template: ").append(toIndentedString(template)).append("\n");
    sb.append("    sender: ").append(toIndentedString(sender)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
