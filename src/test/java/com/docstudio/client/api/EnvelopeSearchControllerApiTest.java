/*
 * DocStudio Api Documentation
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: R110.4
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.docstudio.client.api;

import com.docstudio.client.ApiException;
import com.docstudio.client.model.*;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.*;

/**
 * API tests for EnvelopeSearchControllerApi
 */
@Disabled
public class EnvelopeSearchControllerApiTest {

    private final EnvelopeSearchControllerApi api = new EnvelopeSearchControllerApi();

    /**
     * Add a new column to display
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addNewColumnTest() throws ApiException {
        UUID mailbox = null;
        NewEnvColumnDTO newEnvColumnDTO = null;
        SingleUuidDTO response = api.addNewColumn(mailbox, newEnvColumnDTO);
        // TODO: test validations
    }

    /**
     * Request envelopes report
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createReportTest() throws ApiException {
        UUID mailbox = null;
        ReportEnvelopeRequestDTO reportEnvelopeRequestDTO = null;
        api.createReport(mailbox, reportEnvelopeRequestDTO);
        // TODO: test validations
    }

    /**
     * Delete columns from displaying
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteColumnTest() throws ApiException {
        UUID mailbox = null;
        DeleteEnvColumnDTO deleteEnvColumnDTO = null;
        api.deleteColumn(mailbox, deleteEnvColumnDTO);
        // TODO: test validations
    }

    /**
     * Retrieve all available folders for mailbox
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getMailboxFoldersTest() throws ApiException {
        UUID mailbox = null;
        Set<String> requestBody = null;
        List<String> response = api.getMailboxFolders(mailbox, requestBody);
        // TODO: test validations
    }

    /**
     * Get search fields
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSearchFieldsTest() throws ApiException {
        String name = null;
        UUID mailbox = null;
        SearchEnvelopesDTO searchEnvelopesDTO = null;
        List<EnvelopeSearchField> response = api.getSearchFields(name, mailbox, searchEnvelopesDTO);
        // TODO: test validations
    }

    /**
     * Retrieve all template roles
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getTemplateRolesTest() throws ApiException {
        UUID mailbox = null;
        Set<UUID> UUID = null;
        TemplateRolesDTO response = api.getTemplateRoles(mailbox, UUID);
        // TODO: test validations
    }

    /**
     * Search envelopes
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void searchEnvelopesTest() throws ApiException {
        UUID mailbox = null;
        SearchEnvelopesDTO searchEnvelopesDTO = null;
        Integer offset = null;
        Integer limit = null;
        Boolean uuidOnly = null;
        EnvelopePageDTO response = api.searchEnvelopes(mailbox, searchEnvelopesDTO, offset, limit, uuidOnly);
        // TODO: test validations
    }

    /**
     * Search envelopes for approval
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void searchEnvelopesForApprovalTest() throws ApiException {
        UUID mailbox = null;
        SearchApprovalsDTO searchApprovalsDTO = null;
        Integer offset = null;
        Integer limit = null;
        EnvelopeApprovalPageDTO response = api.searchEnvelopesForApproval(mailbox, searchApprovalsDTO, offset, limit);
        // TODO: test validations
    }

    /**
     * Update column to display
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateColumnTest() throws ApiException {
        UUID uuid = null;
        UUID mailbox = null;
        UpdateEnvColumnDTO updateEnvColumnDTO = null;
        api.updateColumn(uuid, mailbox, updateEnvColumnDTO);
        // TODO: test validations
    }

}
