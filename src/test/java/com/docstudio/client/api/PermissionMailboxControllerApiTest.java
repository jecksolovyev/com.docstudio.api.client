/*
 * DocStudio Api Documentation
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: R110.4
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.docstudio.client.api;

import com.docstudio.client.ApiException;
import com.docstudio.client.model.PermissionsDTO;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.UUID;

/**
 * API tests for PermissionMailboxControllerApi
 */
@Disabled
public class PermissionMailboxControllerApiTest {

    private final PermissionMailboxControllerApi api = new PermissionMailboxControllerApi();

    /**
     * Delete all permissions and roles for selected user-to-mailbox relation
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteAllPermissionsTest() throws ApiException {
        UUID userUuid = null;
        UUID mailboxUuid = null;
        api.deleteAllPermissions(userUuid, mailboxUuid);
        // TODO: test validations
    }

    /**
     * Delete permission for specific user-to-mailbox relation
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deletePermissionTest() throws ApiException {
        UUID userUuid = null;
        UUID mailboxUuid = null;
        Integer permissionId = null;
        api.deletePermission(userUuid, mailboxUuid, permissionId);
        // TODO: test validations
    }

    /**
     * Delete role
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteRoleFromMailboxTest() throws ApiException {
        UUID userUuid = null;
        UUID mailboxUuid = null;
        UUID roleUuid = null;
        api.deleteRoleFromMailbox(userUuid, mailboxUuid, roleUuid);
        // TODO: test validations
    }

    /**
     * Add exact permissions/roles leaving existing as is. Ignore if already present.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void patchMbPermissionsTest() throws ApiException {
        UUID userUuid = null;
        UUID mailboxUuid = null;
        PermissionsDTO permissionsDTO = null;
        api.patchMbPermissions(userUuid, mailboxUuid, permissionsDTO);
        // TODO: test validations
    }

    /**
     * Replace all permissions for selected user-to-mailbox relation
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void replaceAllPermissionsTest() throws ApiException {
        UUID userUuid = null;
        UUID mailboxUuid = null;
        PermissionsDTO permissionsDTO = null;
        api.replaceAllPermissions(userUuid, mailboxUuid, permissionsDTO);
        // TODO: test validations
    }

}
