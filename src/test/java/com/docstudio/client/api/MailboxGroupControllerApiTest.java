/*
 * DocStudio Api Documentation
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: R110.4
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.docstudio.client.api;

import com.docstudio.client.ApiException;
import com.docstudio.client.model.*;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.*;

/**
 * API tests for MailboxGroupControllerApi
 */
@Disabled
public class MailboxGroupControllerApiTest {

    private final MailboxGroupControllerApi api = new MailboxGroupControllerApi();

    /**
     * Add mailboxes to group
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addMailboxesToGroupTest() throws ApiException {
        UUID accountUuid = null;
        UUID groupUuid = null;
        Set<UUID> UUID = null;
        GroupInfoDTO response = api.addMailboxesToGroup(accountUuid, groupUuid, UUID);
        // TODO: test validations
    }

    /**
     * Create mailbox group
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createMailboxGroupTest() throws ApiException {
        UUID accountUuid = null;
        UpdateGroupDTO updateGroupDTO = null;
        GroupInfoDTO response = api.createMailboxGroup(accountUuid, updateGroupDTO);
        // TODO: test validations
    }

    /**
     * Get mailbox group
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getMailboxGroupTest() throws ApiException {
        UUID accountUuid = null;
        UUID groupUuid = null;
        GroupInfoDTO response = api.getMailboxGroup(accountUuid, groupUuid);
        // TODO: test validations
    }

    /**
     * Get groups names
     *
     * Search groups by UUID list and return list of name and uuid
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getMailboxGroupsNamesTest() throws ApiException {
        UUID accountUuid = null;
        UUID mailbox = null;
        Set<UUID> UUID = null;
        List<NameUuidDTO> response = api.getMailboxGroupsNames(accountUuid, mailbox, UUID);
        // TODO: test validations
    }

    /**
     * Remove mailboxes from group
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void removeMailboxesFromGroupTest() throws ApiException {
        UUID accountUuid = null;
        UUID groupUuid = null;
        Set<UUID> UUID = null;
        GroupInfoDTO response = api.removeMailboxesFromGroup(accountUuid, groupUuid, UUID);
        // TODO: test validations
    }

    /**
     * List/search groups
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void searchGroupsTest() throws ApiException {
        UUID accountUuid = null;
        String keyword = null;
        Integer offset = null;
        Integer limit = null;
        Boolean asc = null;
        UUID mailbox = null;
        PageDTOGroupListInfoDTO response = api.searchGroups(accountUuid, keyword, offset, limit, asc, mailbox);
        // TODO: test validations
    }

    /**
     * Update mailbox group
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateMailboxGroupTest() throws ApiException {
        UUID accountUuid = null;
        UUID groupUuid = null;
        UpdateGroupDTO updateGroupDTO = null;
        GroupInfoDTO response = api.updateMailboxGroup(accountUuid, groupUuid, updateGroupDTO);
        // TODO: test validations
    }

    /**
     * Delete mailbox group
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateMailboxGroupMailboxGroupTest() throws ApiException {
        UUID accountUuid = null;
        UUID groupUuid = null;
        api.updateMailboxGroupMailboxGroup(accountUuid, groupUuid);
        // TODO: test validations
    }

}
