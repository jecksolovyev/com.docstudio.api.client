/*
 * DocStudio Api Documentation
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: R120.9
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.docstudio.client.api;

import com.docstudio.client.model.GroupInfoDTO;
import com.docstudio.client.model.NameUuidDTO;
import com.docstudio.client.model.PageDTOGroupListInfoDTO;
import java.util.UUID;
import com.docstudio.client.model.UpdateGroupDTO;
import org.junit.Test;
import org.junit.Ignore;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;


/**
 * API tests for MailboxGroupControllerApi
 */
@Ignore
public class MailboxGroupControllerApiTest {

    private final MailboxGroupControllerApi api = new MailboxGroupControllerApi();

    /**
     * Add mailboxes to group
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void addMailboxesToGroupTest() throws Exception {
        List<UUID> body = null;
        UUID accountUuid = null;
        UUID groupUuid = null;
        GroupInfoDTO response = api.addMailboxesToGroup(body, accountUuid, groupUuid);

        // TODO: test validations
    }
    /**
     * Create mailbox group
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void createMailboxGroupTest() throws Exception {
        UpdateGroupDTO body = null;
        UUID accountUuid = null;
        GroupInfoDTO response = api.createMailboxGroup(body, accountUuid);

        // TODO: test validations
    }
    /**
     * Get mailbox group
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getMailboxGroupTest() throws Exception {
        UUID accountUuid = null;
        UUID groupUuid = null;
        GroupInfoDTO response = api.getMailboxGroup(accountUuid, groupUuid);

        // TODO: test validations
    }
    /**
     * Get groups names
     *
     * Search groups by UUID list and return list of name and uuid
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getMailboxGroupsNamesTest() throws Exception {
        List<UUID> body = null;
        UUID mailbox = null;
        UUID accountUuid = null;
        List<NameUuidDTO> response = api.getMailboxGroupsNames(body, mailbox, accountUuid);

        // TODO: test validations
    }
    /**
     * Remove mailboxes from group
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void removeMailboxesFromGroupTest() throws Exception {
        List<UUID> body = null;
        UUID accountUuid = null;
        UUID groupUuid = null;
        GroupInfoDTO response = api.removeMailboxesFromGroup(body, accountUuid, groupUuid);

        // TODO: test validations
    }
    /**
     * List/search groups
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void searchGroupsTest() throws Exception {
        UUID accountUuid = null;
        String keyword = null;
        Integer offset = null;
        Integer limit = null;
        Boolean asc = null;
        UUID mailbox = null;
        PageDTOGroupListInfoDTO response = api.searchGroups(accountUuid, keyword, offset, limit, asc, mailbox);

        // TODO: test validations
    }
    /**
     * Update mailbox group
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void updateMailboxGroupTest() throws Exception {
        UpdateGroupDTO body = null;
        UUID accountUuid = null;
        UUID groupUuid = null;
        GroupInfoDTO response = api.updateMailboxGroup(body, accountUuid, groupUuid);

        // TODO: test validations
    }
    /**
     * Delete mailbox group
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void updateMailboxGroupMailboxGroupTest() throws Exception {
        UUID accountUuid = null;
        UUID groupUuid = null;
        api.updateMailboxGroupMailboxGroup(accountUuid, groupUuid);

        // TODO: test validations
    }
}
