/*
 * DocStudio Api Documentation
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: R110.4
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.docstudio.client.api;

import com.docstudio.client.ApiException;
import com.docstudio.client.model.*;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * API tests for RegistrationControllerApi
 */
@Disabled
public class RegistrationControllerApiTest {

    private final RegistrationControllerApi api = new RegistrationControllerApi();

    /**
     * Get user password policy
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getUserPasswordPolicyTest() throws ApiException {
        String email = null;
        PasswordPolicy response = api.getUserPasswordPolicy(email);
        // TODO: test validations
    }

    /**
     * Register a user with validation code
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void registerTest() throws ApiException {
        String code = null;
        UserCreateDTO userCreateDTO = null;
        String codeType = null;
        LoginResponseDTO response = api.register(code, userCreateDTO, codeType);
        // TODO: test validations
    }

    /**
     * Renew user&#39;s password
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void renewPasswordTest() throws ApiException {
        RenewPasswordDTO renewPasswordDTO = null;
        api.renewPassword(renewPasswordDTO);
        // TODO: test validations
    }

    /**
     * Send email validation code
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void requestResendValidationCodeTest() throws ApiException {
        RequestValCodeDTO requestValCodeDTO = null;
        Object response = api.requestResendValidationCode(requestValCodeDTO);
        // TODO: test validations
    }

    /**
     * Request password reset
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void requestResetPasswordTest() throws ApiException {
        RequestValCodeDTO requestValCodeDTO = null;
        Object response = api.requestResetPassword(requestValCodeDTO);
        // TODO: test validations
    }

    /**
     * Reset password
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void resetPasswordTest() throws ApiException {
        ResetPasswordDTO resetPasswordDTO = null;
        api.resetPassword(resetPasswordDTO);
        // TODO: test validations
    }

    /**
     * Validate user code from email
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void validationTest() throws ApiException {
        String code = null;
        String type = null;
        Object response = api.validation(code, type);
        // TODO: test validations
    }

}
