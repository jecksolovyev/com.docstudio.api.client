/*
 * DocStudio Api Documentation
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: R110.4
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.docstudio.client.api;

import com.docstudio.client.ApiException;
import com.docstudio.client.model.*;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.List;
import java.util.UUID;

/**
 * API tests for AccountDomainControllerApi
 */
@Disabled
public class AccountDomainControllerApiTest {

    private final AccountDomainControllerApi api = new AccountDomainControllerApi();

    /**
     * Change account domain status
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void actionAccountDomainTest() throws ApiException {
        UUID accountUuid = null;
        UUID domainUuid = null;
        String action = null;
        ChangeDomainStatusDTO changeDomainStatusDTO = null;
        AccountDomainDTO response = api.actionAccountDomain(accountUuid, domainUuid, action, changeDomainStatusDTO);
        // TODO: test validations
    }

    /**
     * Create account domain
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createAccountDomainTest() throws ApiException {
        UUID accountUuid = null;
        AccountDomainCreateDTO accountDomainCreateDTO = null;
        AccountDomainDTO response = api.createAccountDomain(accountUuid, accountDomainCreateDTO);
        // TODO: test validations
    }

    /**
     * Create account SSO Identity Provider
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createAccountSsoIdpTest() throws ApiException {
        UUID accountUuid = null;
        AccountSsoIdProviderUpdateDTO accountSsoIdProviderUpdateDTO = null;
        AccountSsoIdProviderDTO response = api.createAccountSsoIdp(accountUuid, accountSsoIdProviderUpdateDTO);
        // TODO: test validations
    }

    /**
     * Delete account domain
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteAccountDomainTest() throws ApiException {
        UUID accountUuid = null;
        UUID domainUuid = null;
        api.deleteAccountDomain(accountUuid, domainUuid);
        // TODO: test validations
    }

    /**
     * Delete account SSO IdP
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteAccountIdpTest() throws ApiException {
        UUID accountUuid = null;
        UUID idpUuid = null;
        api.deleteAccountIdp(accountUuid, idpUuid);
        // TODO: test validations
    }

    /**
     * Get account domain
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAccountDomainTest() throws ApiException {
        UUID accountUuid = null;
        UUID domainUuid = null;
        AccountDomainDTO response = api.getAccountDomain(accountUuid, domainUuid);
        // TODO: test validations
    }

    /**
     * Get paged account domains list
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAccountDomainsTest() throws ApiException {
        UUID accountUuid = null;
        Integer offset = null;
        Integer limit = null;
        String keyword = null;
        String status = null;
        PageDTOAccountDomainDTO response = api.getAccountDomains(accountUuid, offset, limit, keyword, status);
        // TODO: test validations
    }

    /**
     * Get account SSO IdP
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAccountIdpTest() throws ApiException {
        UUID accountUuid = null;
        UUID idpUuid = null;
        AccountSsoIdProviderDTO response = api.getAccountIdp(accountUuid, idpUuid);
        // TODO: test validations
    }

    /**
     * Get all account SSO IdPs
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAllAccountIdpsTest() throws ApiException {
        UUID accountUuid = null;
        List<AccountSsoIdProviderShortDTO> response = api.getAllAccountIdps(accountUuid);
        // TODO: test validations
    }

    /**
     * Update account domain
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateAccountDomainTest() throws ApiException {
        UUID accountUuid = null;
        UUID domainUuid = null;
        AccountDomainUpdateDTO accountDomainUpdateDTO = null;
        AccountDomainDTO response = api.updateAccountDomain(accountUuid, domainUuid, accountDomainUpdateDTO);
        // TODO: test validations
    }

    /**
     * Update account SSO Identity Provider
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateAccountSsoIdpTest() throws ApiException {
        UUID accountUuid = null;
        UUID idpUuid = null;
        AccountSsoIdProviderUpdateDTO accountSsoIdProviderUpdateDTO = null;
        AccountSsoIdProviderDTO response = api.updateAccountSsoIdp(accountUuid, idpUuid, accountSsoIdProviderUpdateDTO);
        // TODO: test validations
    }

}
