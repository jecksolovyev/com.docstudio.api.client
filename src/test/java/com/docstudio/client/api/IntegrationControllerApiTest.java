/*
 * DocStudio Api Documentation
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: R120.9
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.docstudio.client.api;

import com.docstudio.client.model.DataMap;
import com.docstudio.client.model.IntegrationDTO;
import com.docstudio.client.model.IntegrationRuleDTO;
import com.docstudio.client.model.IntegrationRuleRequestDTO;
import com.docstudio.client.model.IntegrationRuleResponseDTO;
import java.util.UUID;
import org.junit.Test;
import org.junit.Ignore;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;


/**
 * API tests for IntegrationControllerApi
 */
@Ignore
public class IntegrationControllerApiTest {

    private final IntegrationControllerApi api = new IntegrationControllerApi();

    /**
     * Convert incoming file to XML view
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void convertBinaryToXMLTest() throws Exception {
        String filename = null;
        UUID mailboxUuid = null;
        byte[] body = null;
        String response = api.convertBinaryToXML(filename, mailboxUuid, body);

        // TODO: test validations
    }
    /**
     * Create integration rule
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void createIntegrationRuleTest() throws Exception {
        IntegrationRuleDTO body = null;
        IntegrationRuleDTO response = api.createIntegrationRule(body);

        // TODO: test validations
    }
    /**
     * Delete integration rule
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void deleteIntegrationRuleTest() throws Exception {
        UUID integrationRuleUuid = null;
        api.deleteIntegrationRule(integrationRuleUuid);

        // TODO: test validations
    }
    /**
     * Execute conversion map and generate file name (if pattern rule defined)
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void executeTest() throws Exception {
        IntegrationRuleRequestDTO body = null;
        IntegrationRuleResponseDTO response = api.execute(body);

        // TODO: test validations
    }
    /**
     * Generate envelope XML by template
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void generateTest() throws Exception {
        UUID templateUuid = null;
        UUID mailboxUuid = null;
        UUID versionUuid = null;
        DataMap response = api.generate(templateUuid, mailboxUuid, versionUuid);

        // TODO: test validations
    }
    /**
     * Get public exchange certificate
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getExchangeCertificateTest() throws Exception {
        byte[] response = api.getExchangeCertificate();

        // TODO: test validations
    }
    /**
     * Get integration rule
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getIntegrationRuleTest() throws Exception {
        UUID integrationRuleUuid = null;
        IntegrationRuleDTO response = api.getIntegrationRule(integrationRuleUuid);

        // TODO: test validations
    }
    /**
     * Get account integration rules
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getIntegrationRulesTest() throws Exception {
        UUID accountUuid = null;
        UUID mailboxUuid = null;
        List<IntegrationRuleDTO> response = api.getIntegrationRules(accountUuid, mailboxUuid);

        // TODO: test validations
    }
    /**
     * Get Mailbox integration
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getMailboxIntegrationTest() throws Exception {
        UUID mailboxUuid = null;
        IntegrationDTO response = api.getMailboxIntegration(mailboxUuid);

        // TODO: test validations
    }
    /**
     * Generate and save new password
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void newPasswordTest() throws Exception {
        UUID mailboxUuid = null;
        Object response = api.newPassword(mailboxUuid);

        // TODO: test validations
    }
    /**
     * Create/update Mailbox integration
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void saveMailboxIntegrationTest() throws Exception {
        IntegrationDTO body = null;
        UUID mailboxUuid = null;
        IntegrationDTO response = api.saveMailboxIntegration(body, mailboxUuid);

        // TODO: test validations
    }
    /**
     * Update integration rule
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void updateIntegrationRuleTest() throws Exception {
        IntegrationRuleDTO body = null;
        UUID integrationRuleUuid = null;
        IntegrationRuleDTO response = api.updateIntegrationRule(body, integrationRuleUuid);

        // TODO: test validations
    }
}
