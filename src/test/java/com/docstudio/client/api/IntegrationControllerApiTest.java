/*
 * DocStudio Api Documentation
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: R110.4
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.docstudio.client.api;

import com.docstudio.client.ApiException;
import com.docstudio.client.model.*;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.List;
import java.util.UUID;

/**
 * API tests for IntegrationControllerApi
 */
@Disabled
public class IntegrationControllerApiTest {

    private final IntegrationControllerApi api = new IntegrationControllerApi();

    /**
     * Convert incoming file to XML view
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void convertBinaryToXMLTest() throws ApiException {
        String filename = null;
        UUID mailboxUuid = null;
        List<byte[]> requestBody = null;
        String response = api.convertBinaryToXML(filename, mailboxUuid, requestBody);
        // TODO: test validations
    }

    /**
     * Create integration rule
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createIntegrationRuleTest() throws ApiException {
        IntegrationRuleDTO integrationRuleDTO = null;
        IntegrationRuleDTO response = api.createIntegrationRule(integrationRuleDTO);
        // TODO: test validations
    }

    /**
     * Delete integration rule
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteIntegrationRuleTest() throws ApiException {
        UUID integrationRuleUuid = null;
        api.deleteIntegrationRule(integrationRuleUuid);
        // TODO: test validations
    }

    /**
     * Execute conversion map and generate file name (if pattern rule defined)
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void executeTest() throws ApiException {
        IntegrationRuleRequestDTO integrationRuleRequestDTO = null;
        IntegrationRuleResponseDTO response = api.execute(integrationRuleRequestDTO);
        // TODO: test validations
    }

    /**
     * Generate envelope XML by template
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void generateTest() throws ApiException {
        UUID templateUuid = null;
        UUID mailboxUuid = null;
        UUID versionUuid = null;
        DataMap response = api.generate(templateUuid, mailboxUuid, versionUuid);
        // TODO: test validations
    }

    /**
     * Get public exchange certificate
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getExchangeCertificateTest() throws ApiException {
        List<byte[]> response = api.getExchangeCertificate();
        // TODO: test validations
    }

    /**
     * Get integration rule
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getIntegrationRuleTest() throws ApiException {
        UUID integrationRuleUuid = null;
        IntegrationRuleDTO response = api.getIntegrationRule(integrationRuleUuid);
        // TODO: test validations
    }

    /**
     * Get account integration rules
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getIntegrationRulesTest() throws ApiException {
        UUID accountUuid = null;
        UUID mailboxUuid = null;
        List<IntegrationRuleDTO> response = api.getIntegrationRules(accountUuid, mailboxUuid);
        // TODO: test validations
    }

    /**
     * Get Mailbox integration
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getMailboxIntegrationTest() throws ApiException {
        UUID mailboxUuid = null;
        IntegrationDTO response = api.getMailboxIntegration(mailboxUuid);
        // TODO: test validations
    }

    /**
     * Generate and save new password
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void newPasswordTest() throws ApiException {
        UUID mailboxUuid = null;
        Object response = api.newPassword(mailboxUuid);
        // TODO: test validations
    }

    /**
     * Create/update Mailbox integration
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void saveMailboxIntegrationTest() throws ApiException {
        UUID mailboxUuid = null;
        IntegrationDTO integrationDTO = null;
        IntegrationDTO response = api.saveMailboxIntegration(mailboxUuid, integrationDTO);
        // TODO: test validations
    }

    /**
     * Update integration rule
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateIntegrationRuleTest() throws ApiException {
        UUID integrationRuleUuid = null;
        IntegrationRuleDTO integrationRuleDTO = null;
        IntegrationRuleDTO response = api.updateIntegrationRule(integrationRuleUuid, integrationRuleDTO);
        // TODO: test validations
    }

}
