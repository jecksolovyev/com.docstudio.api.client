/*
 * DocStudio Api Documentation
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: R110.4
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.docstudio.client.api;

import com.docstudio.client.ApiException;
import com.docstudio.client.model.*;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.UUID;

/**
 * API tests for PermissionAccountControllerApi
 */
@Disabled
public class PermissionAccountControllerApiTest {

    private final PermissionAccountControllerApi api = new PermissionAccountControllerApi();

    /**
     * Delete user from account totally
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteAccAllPermissionsTest() throws ApiException {
        UUID userUuid = null;
        UUID accountUuid = null;
        api.deleteAccAllPermissions(userUuid, accountUuid);
        // TODO: test validations
    }

    /**
     * Delete permission for specific &#39;user-to-account&#39; relation
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteAccPermissionTest() throws ApiException {
        UUID userUuid = null;
        UUID accountUuid = null;
        Integer permissionId = null;
        api.deleteAccPermission(userUuid, accountUuid, permissionId);
        // TODO: test validations
    }

    /**
     * Delete role
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteAccRoleTest() throws ApiException {
        UUID userUuid = null;
        UUID accountUuid = null;
        UUID roleUuid = null;
        api.deleteAccRole(userUuid, accountUuid, roleUuid);
        // TODO: test validations
    }

    /**
     * Read all user permissions
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getUserAccountPermissionsTest() throws ApiException {
        UUID userUuid = null;
        UUID accountUuid = null;
        AccountPermissionsDTO response = api.getUserAccountPermissions(userUuid, accountUuid);
        // TODO: test validations
    }

    /**
     * Add exact permission for selected user-to-account relation. Add if absent or ignore if already present.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void patchMbPermissionsPermissionAccountTest() throws ApiException {
        UUID userUuid = null;
        UUID accountUuid = null;
        PermissionsDTO permissionsDTO = null;
        api.patchMbPermissionsPermissionAccount(userUuid, accountUuid, permissionsDTO);
        // TODO: test validations
    }

    /**
     * Replace all permissions for selected user-to-account relation
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void replaceAllPermissionsPermissionAccountTest() throws ApiException {
        UUID userUuid = null;
        UUID accountUuid = null;
        PermissionsDTO permissionsDTO = null;
        api.replaceAllPermissionsPermissionAccount(userUuid, accountUuid, permissionsDTO);
        // TODO: test validations
    }

    /**
     * Write user permissions
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void setUserAccountPermissionsTest() throws ApiException {
        UUID userUuid = null;
        UUID accountUuid = null;
        BasePermissionsDTO basePermissionsDTO = null;
        api.setUserAccountPermissions(userUuid, accountUuid, basePermissionsDTO);
        // TODO: test validations
    }

}
