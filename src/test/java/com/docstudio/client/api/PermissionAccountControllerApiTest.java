/*
 * DocStudio Api Documentation
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: R120.9
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.docstudio.client.api;

import com.docstudio.client.model.AccountPermissionsDTO;
import com.docstudio.client.model.BasePermissionsDTO;
import com.docstudio.client.model.PermissionsDTO;
import java.util.UUID;
import org.junit.Test;
import org.junit.Ignore;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;


/**
 * API tests for PermissionAccountControllerApi
 */
@Ignore
public class PermissionAccountControllerApiTest {

    private final PermissionAccountControllerApi api = new PermissionAccountControllerApi();

    /**
     * Delete user from account totally
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void deleteAccAllPermissionsTest() throws Exception {
        UUID userUuid = null;
        UUID accountUuid = null;
        api.deleteAccAllPermissions(userUuid, accountUuid);

        // TODO: test validations
    }
    /**
     * Delete permission for specific &#x27;user-to-account&#x27; relation
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void deleteAccPermissionTest() throws Exception {
        UUID userUuid = null;
        UUID accountUuid = null;
        Integer permissionId = null;
        api.deleteAccPermission(userUuid, accountUuid, permissionId);

        // TODO: test validations
    }
    /**
     * Delete role
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void deleteAccRoleTest() throws Exception {
        UUID userUuid = null;
        UUID accountUuid = null;
        UUID roleUuid = null;
        api.deleteAccRole(userUuid, accountUuid, roleUuid);

        // TODO: test validations
    }
    /**
     * Read all user permissions
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getUserAccountPermissionsTest() throws Exception {
        UUID userUuid = null;
        UUID accountUuid = null;
        AccountPermissionsDTO response = api.getUserAccountPermissions(userUuid, accountUuid);

        // TODO: test validations
    }
    /**
     * Add exact permission for selected user-to-account relation. Add if absent or ignore if already present.
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void patchMbPermissionsPermissionAccountTest() throws Exception {
        PermissionsDTO body = null;
        UUID userUuid = null;
        UUID accountUuid = null;
        api.patchMbPermissionsPermissionAccount(body, userUuid, accountUuid);

        // TODO: test validations
    }
    /**
     * Replace all permissions for selected user-to-account relation
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void replaceAllPermissionsPermissionAccountTest() throws Exception {
        PermissionsDTO body = null;
        UUID userUuid = null;
        UUID accountUuid = null;
        api.replaceAllPermissionsPermissionAccount(body, userUuid, accountUuid);

        // TODO: test validations
    }
    /**
     * Write user permissions
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void setUserAccountPermissionsTest() throws Exception {
        BasePermissionsDTO body = null;
        UUID userUuid = null;
        UUID accountUuid = null;
        api.setUserAccountPermissions(body, userUuid, accountUuid);

        // TODO: test validations
    }
}
